Terminals unused in grammar

    _AND
    _CLASS
    _FOR
    _IN
    _OR


Grammar

    0 $accept: file $end

    1 file: %empty
    2     | statement_list
    3     | new_line statement_list

    4 statement_list: statement
    5               | statement_list statement

    6 statement: simple_statement new_line
    7          | compound_statement

    8 simple_statement: assign_statement
    9                 | multi_assign_statement
   10                 | return_statement
   11                 | function_call
   12                 | _BREAK
   13                 | _CONTINUE
   14                 | _PASS

   15 compound_statement: function_def
   16                   | if_statement
   17                   | while_statement
   18                   | try_except_statement

   19 assign_statement: _ID _ASSIGN num_exp

   20 multi_assign_statement: multi_assign_vars multi_assign_values

   21 multi_assign_vars: _ID _COMMA _ID
   22                  | multi_assign_vars _COMMA _ID

   23 multi_assign_values: _ASSIGN num_exp _COMMA num_exp
   24                    | multi_assign_values _COMMA num_exp

   25 return_statement: _RETURN
   26                 | _RETURN num_exp

   27 function_call: _ID _LPAREN arguments _RPAREN

   28 arguments: %empty
   29          | arguments args

   30 args: num_exp
   31     | args _COMMA num_exp

   32 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON new_line body

   33 parameters: %empty
   34           | _ID
   35           | param_with_default_val
   36           | parameters _COMMA _ID
   37           | parameters _COMMA param_with_default_val

   38 param_with_default_val: _ID _ASSIGN num_exp

   39 if_statement: if_part elif_part else_part

   40 if_part: _IF num_exp _COLON new_line body

   41 elif_part: %empty
   42          | elif_part _ELIF num_exp _COLON new_line body

   43 while_statement: while_part else_part

   44 while_part: _WHILE num_exp _COLON new_line body

   45 try_except_statement: try_part except_part finally_or_else_part

   46 try_part: _TRY _COLON new_line body

   47 except_part: %empty
   48            | except_part _EXCEPT _ID except_finally_body
   49            | except_part _EXCEPT except_finally_body

   50 except_finally_body: _COLON new_line body

   51 finally_or_else_part: %empty
   52                     | _FINALLY except_finally_body
   53                     | _ELSE except_finally_body

   54 else_part: %empty
   55          | _ELSE _COLON new_line body

   56 body: _INDENT statement_list _DEDENT

   57 num_exp: exp
   58        | _NOT num_exp
   59        | num_exp _ADD_SUB_OP num_exp
   60        | num_exp _MUL_DIV_OP num_exp
   61        | num_exp _LOP num_exp
   62        | num_exp _RELOP num_exp

   63 exp: literal
   64    | _ID
   65    | function_call
   66    | _LPAREN num_exp _RPAREN
   67    | list

   68 list: _LBRACKET list_elements _RBRACKET

   69 list_elements: %empty
   70              | num_exp
   71              | list_elements _COMMA num_exp

   72 literal: _NUM_BOOL
   73        | _STRING
   74        | _NONE

   75 new_line: _NEW_LINE
   76         | new_line _NEW_LINE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _NEW_LINE (258) 75 76
    _INDENT (259) 56
    _DEDENT (260) 56
    _AND (261)
    _BREAK (262) 12
    _CLASS (263)
    _CONTINUE (264) 13
    _DEF (265) 32
    _ELIF (266) 42
    _ELSE (267) 53 55
    _EXCEPT (268) 48 49
    _FINALLY (269) 52
    _FOR (270)
    _IF (271) 40
    _IN (272)
    _NOT (273) 58
    _OR (274)
    _PASS (275) 14
    _RETURN (276) 25 26
    _TRY (277) 46
    _WHILE (278) 44
    _COMMA (279) 21 22 23 24 31 36 37 71
    _COLON (280) 32 40 42 44 46 50 55
    _LBRACKET (281) 68
    _RBRACKET (282) 68
    _LPAREN (283) 27 32 66
    _RPAREN (284) 27 32 66
    _ASSIGN (285) 19 23 38
    _ADD_SUB_OP <i> (286) 59
    _MUL_DIV_OP <i> (287) 60
    _LOP <i> (288) 61
    _RELOP <i> (289) 62
    _ID <s> (290) 19 21 22 27 32 34 36 38 48 64
    _NUM_BOOL <s> (291) 72
    _STRING <s> (292) 73
    _NONE <s> (293) 74
    VAR_ID (294)


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    file (41)
        on left: 1 2 3
        on right: 0
    statement_list (42)
        on left: 4 5
        on right: 2 3 5 56
    statement (43)
        on left: 6 7
        on right: 4 5
    simple_statement (44)
        on left: 8 9 10 11 12 13 14
        on right: 6
    compound_statement (45)
        on left: 15 16 17 18
        on right: 7
    assign_statement (46)
        on left: 19
        on right: 8
    multi_assign_statement (47)
        on left: 20
        on right: 9
    multi_assign_vars (48)
        on left: 21 22
        on right: 20 22
    multi_assign_values (49)
        on left: 23 24
        on right: 20 24
    return_statement (50)
        on left: 25 26
        on right: 10
    function_call (51)
        on left: 27
        on right: 11 65
    arguments (52)
        on left: 28 29
        on right: 27 29
    args (53)
        on left: 30 31
        on right: 29 31
    function_def (54)
        on left: 32
        on right: 15
    parameters (55)
        on left: 33 34 35 36 37
        on right: 32 36 37
    param_with_default_val (56)
        on left: 38
        on right: 35 37
    if_statement (57)
        on left: 39
        on right: 16
    if_part (58)
        on left: 40
        on right: 39
    elif_part (59)
        on left: 41 42
        on right: 39 42
    while_statement (60)
        on left: 43
        on right: 17
    while_part (61)
        on left: 44
        on right: 43
    try_except_statement (62)
        on left: 45
        on right: 18
    try_part (63)
        on left: 46
        on right: 45
    except_part (64)
        on left: 47 48 49
        on right: 45 48 49
    except_finally_body (65)
        on left: 50
        on right: 48 49 52 53
    finally_or_else_part (66)
        on left: 51 52 53
        on right: 45
    else_part (67)
        on left: 54 55
        on right: 39 43
    body (68)
        on left: 56
        on right: 32 40 42 44 46 50 55
    num_exp (69)
        on left: 57 58 59 60 61 62
        on right: 19 23 24 26 30 31 38 40 42 44 58 59 60 61 62 66 70 71
    exp (70)
        on left: 63 64 65 66 67
        on right: 57
    list (71)
        on left: 68
        on right: 67
    list_elements (72)
        on left: 69 70 71
        on right: 68 71
    literal (73)
        on left: 72 73 74
        on right: 63
    new_line (74)
        on left: 75 76
        on right: 3 6 32 40 42 44 46 50 55 76


State 0

    0 $accept: . file $end

    _NEW_LINE  shift, and go to state 1
    _BREAK     shift, and go to state 2
    _CONTINUE  shift, and go to state 3
    _DEF       shift, and go to state 4
    _IF        shift, and go to state 5
    _PASS      shift, and go to state 6
    _RETURN    shift, and go to state 7
    _TRY       shift, and go to state 8
    _WHILE     shift, and go to state 9
    _ID        shift, and go to state 10

    $default  reduce using rule 1 (file)

    file                    go to state 11
    statement_list          go to state 12
    statement               go to state 13
    simple_statement        go to state 14
    compound_statement      go to state 15
    assign_statement        go to state 16
    multi_assign_statement  go to state 17
    multi_assign_vars       go to state 18
    return_statement        go to state 19
    function_call           go to state 20
    function_def            go to state 21
    if_statement            go to state 22
    if_part                 go to state 23
    while_statement         go to state 24
    while_part              go to state 25
    try_except_statement    go to state 26
    try_part                go to state 27
    new_line                go to state 28


State 1

   75 new_line: _NEW_LINE .

    $default  reduce using rule 75 (new_line)


State 2

   12 simple_statement: _BREAK .

    $default  reduce using rule 12 (simple_statement)


State 3

   13 simple_statement: _CONTINUE .

    $default  reduce using rule 13 (simple_statement)


State 4

   32 function_def: _DEF . _ID _LPAREN parameters _RPAREN _COLON new_line body

    _ID  shift, and go to state 29


State 5

   40 if_part: _IF . num_exp _COLON new_line body

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 38
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 6

   14 simple_statement: _PASS .

    $default  reduce using rule 14 (simple_statement)


State 7

   25 return_statement: _RETURN .
   26                 | _RETURN . num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    $default  reduce using rule 25 (return_statement)

    function_call  go to state 37
    num_exp        go to state 42
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 8

   46 try_part: _TRY . _COLON new_line body

    _COLON  shift, and go to state 43


State 9

   44 while_part: _WHILE . num_exp _COLON new_line body

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 44
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 10

   19 assign_statement: _ID . _ASSIGN num_exp
   21 multi_assign_vars: _ID . _COMMA _ID
   27 function_call: _ID . _LPAREN arguments _RPAREN

    _COMMA   shift, and go to state 45
    _LPAREN  shift, and go to state 46
    _ASSIGN  shift, and go to state 47


State 11

    0 $accept: file . $end

    $end  shift, and go to state 48


State 12

    2 file: statement_list .
    5 statement_list: statement_list . statement

    _BREAK     shift, and go to state 2
    _CONTINUE  shift, and go to state 3
    _DEF       shift, and go to state 4
    _IF        shift, and go to state 5
    _PASS      shift, and go to state 6
    _RETURN    shift, and go to state 7
    _TRY       shift, and go to state 8
    _WHILE     shift, and go to state 9
    _ID        shift, and go to state 10

    $default  reduce using rule 2 (file)

    statement               go to state 49
    simple_statement        go to state 14
    compound_statement      go to state 15
    assign_statement        go to state 16
    multi_assign_statement  go to state 17
    multi_assign_vars       go to state 18
    return_statement        go to state 19
    function_call           go to state 20
    function_def            go to state 21
    if_statement            go to state 22
    if_part                 go to state 23
    while_statement         go to state 24
    while_part              go to state 25
    try_except_statement    go to state 26
    try_part                go to state 27


State 13

    4 statement_list: statement .

    $default  reduce using rule 4 (statement_list)


State 14

    6 statement: simple_statement . new_line

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 50


State 15

    7 statement: compound_statement .

    $default  reduce using rule 7 (statement)


State 16

    8 simple_statement: assign_statement .

    $default  reduce using rule 8 (simple_statement)


State 17

    9 simple_statement: multi_assign_statement .

    $default  reduce using rule 9 (simple_statement)


State 18

   20 multi_assign_statement: multi_assign_vars . multi_assign_values
   22 multi_assign_vars: multi_assign_vars . _COMMA _ID

    _COMMA   shift, and go to state 51
    _ASSIGN  shift, and go to state 52

    multi_assign_values  go to state 53


State 19

   10 simple_statement: return_statement .

    $default  reduce using rule 10 (simple_statement)


State 20

   11 simple_statement: function_call .

    $default  reduce using rule 11 (simple_statement)


State 21

   15 compound_statement: function_def .

    $default  reduce using rule 15 (compound_statement)


State 22

   16 compound_statement: if_statement .

    $default  reduce using rule 16 (compound_statement)


State 23

   39 if_statement: if_part . elif_part else_part

    $default  reduce using rule 41 (elif_part)

    elif_part  go to state 54


State 24

   17 compound_statement: while_statement .

    $default  reduce using rule 17 (compound_statement)


State 25

   43 while_statement: while_part . else_part

    _ELSE  shift, and go to state 55

    $default  reduce using rule 54 (else_part)

    else_part  go to state 56


State 26

   18 compound_statement: try_except_statement .

    $default  reduce using rule 18 (compound_statement)


State 27

   45 try_except_statement: try_part . except_part finally_or_else_part

    $default  reduce using rule 47 (except_part)

    except_part  go to state 57


State 28

    3 file: new_line . statement_list
   76 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 58
    _BREAK     shift, and go to state 2
    _CONTINUE  shift, and go to state 3
    _DEF       shift, and go to state 4
    _IF        shift, and go to state 5
    _PASS      shift, and go to state 6
    _RETURN    shift, and go to state 7
    _TRY       shift, and go to state 8
    _WHILE     shift, and go to state 9
    _ID        shift, and go to state 10

    statement_list          go to state 59
    statement               go to state 13
    simple_statement        go to state 14
    compound_statement      go to state 15
    assign_statement        go to state 16
    multi_assign_statement  go to state 17
    multi_assign_vars       go to state 18
    return_statement        go to state 19
    function_call           go to state 20
    function_def            go to state 21
    if_statement            go to state 22
    if_part                 go to state 23
    while_statement         go to state 24
    while_part              go to state 25
    try_except_statement    go to state 26
    try_part                go to state 27


State 29

   32 function_def: _DEF _ID . _LPAREN parameters _RPAREN _COLON new_line body

    _LPAREN  shift, and go to state 60


State 30

   58 num_exp: _NOT . num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 61
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 31

   68 list: _LBRACKET . list_elements _RBRACKET

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    $default  reduce using rule 69 (list_elements)

    function_call  go to state 37
    num_exp        go to state 62
    exp            go to state 39
    list           go to state 40
    list_elements  go to state 63
    literal        go to state 41


State 32

   66 exp: _LPAREN . num_exp _RPAREN

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 64
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 33

   27 function_call: _ID . _LPAREN arguments _RPAREN
   64 exp: _ID .

    _LPAREN  shift, and go to state 46

    $default  reduce using rule 64 (exp)


State 34

   72 literal: _NUM_BOOL .

    $default  reduce using rule 72 (literal)


State 35

   73 literal: _STRING .

    $default  reduce using rule 73 (literal)


State 36

   74 literal: _NONE .

    $default  reduce using rule 74 (literal)


State 37

   65 exp: function_call .

    $default  reduce using rule 65 (exp)


State 38

   40 if_part: _IF num_exp . _COLON new_line body
   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _COLON       shift, and go to state 65
    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69


State 39

   57 num_exp: exp .

    $default  reduce using rule 57 (num_exp)


State 40

   67 exp: list .

    $default  reduce using rule 67 (exp)


State 41

   63 exp: literal .

    $default  reduce using rule 63 (exp)


State 42

   26 return_statement: _RETURN num_exp .
   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69

    $default  reduce using rule 26 (return_statement)


State 43

   46 try_part: _TRY _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 70


State 44

   44 while_part: _WHILE num_exp . _COLON new_line body
   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _COLON       shift, and go to state 71
    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69


State 45

   21 multi_assign_vars: _ID _COMMA . _ID

    _ID  shift, and go to state 72


State 46

   27 function_call: _ID _LPAREN . arguments _RPAREN

    $default  reduce using rule 28 (arguments)

    arguments  go to state 73


State 47

   19 assign_statement: _ID _ASSIGN . num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 74
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 48

    0 $accept: file $end .

    $default  accept


State 49

    5 statement_list: statement_list statement .

    $default  reduce using rule 5 (statement_list)


State 50

    6 statement: simple_statement new_line .
   76 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 58

    $default  reduce using rule 6 (statement)


State 51

   22 multi_assign_vars: multi_assign_vars _COMMA . _ID

    _ID  shift, and go to state 75


State 52

   23 multi_assign_values: _ASSIGN . num_exp _COMMA num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 76
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 53

   20 multi_assign_statement: multi_assign_vars multi_assign_values .
   24 multi_assign_values: multi_assign_values . _COMMA num_exp

    _COMMA  shift, and go to state 77

    $default  reduce using rule 20 (multi_assign_statement)


State 54

   39 if_statement: if_part elif_part . else_part
   42 elif_part: elif_part . _ELIF num_exp _COLON new_line body

    _ELIF  shift, and go to state 78
    _ELSE  shift, and go to state 55

    $default  reduce using rule 54 (else_part)

    else_part  go to state 79


State 55

   55 else_part: _ELSE . _COLON new_line body

    _COLON  shift, and go to state 80


State 56

   43 while_statement: while_part else_part .

    $default  reduce using rule 43 (while_statement)


State 57

   45 try_except_statement: try_part except_part . finally_or_else_part
   48 except_part: except_part . _EXCEPT _ID except_finally_body
   49            | except_part . _EXCEPT except_finally_body

    _ELSE     shift, and go to state 81
    _EXCEPT   shift, and go to state 82
    _FINALLY  shift, and go to state 83

    $default  reduce using rule 51 (finally_or_else_part)

    finally_or_else_part  go to state 84


State 58

   76 new_line: new_line _NEW_LINE .

    $default  reduce using rule 76 (new_line)


State 59

    3 file: new_line statement_list .
    5 statement_list: statement_list . statement

    _BREAK     shift, and go to state 2
    _CONTINUE  shift, and go to state 3
    _DEF       shift, and go to state 4
    _IF        shift, and go to state 5
    _PASS      shift, and go to state 6
    _RETURN    shift, and go to state 7
    _TRY       shift, and go to state 8
    _WHILE     shift, and go to state 9
    _ID        shift, and go to state 10

    $default  reduce using rule 3 (file)

    statement               go to state 49
    simple_statement        go to state 14
    compound_statement      go to state 15
    assign_statement        go to state 16
    multi_assign_statement  go to state 17
    multi_assign_vars       go to state 18
    return_statement        go to state 19
    function_call           go to state 20
    function_def            go to state 21
    if_statement            go to state 22
    if_part                 go to state 23
    while_statement         go to state 24
    while_part              go to state 25
    try_except_statement    go to state 26
    try_part                go to state 27


State 60

   32 function_def: _DEF _ID _LPAREN . parameters _RPAREN _COLON new_line body

    _ID  shift, and go to state 85

    $default  reduce using rule 33 (parameters)

    parameters              go to state 86
    param_with_default_val  go to state 87


State 61

   58 num_exp: _NOT num_exp .
   59        | num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _RELOP       shift, and go to state 69

    $default  reduce using rule 58 (num_exp)


State 62

   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp
   70 list_elements: num_exp .

    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69

    $default  reduce using rule 70 (list_elements)


State 63

   68 list: _LBRACKET list_elements . _RBRACKET
   71 list_elements: list_elements . _COMMA num_exp

    _COMMA     shift, and go to state 88
    _RBRACKET  shift, and go to state 89


State 64

   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp
   66 exp: _LPAREN num_exp . _RPAREN

    _RPAREN      shift, and go to state 90
    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69


State 65

   40 if_part: _IF num_exp _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 91


State 66

   59 num_exp: num_exp _ADD_SUB_OP . num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 92
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 67

   60 num_exp: num_exp _MUL_DIV_OP . num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 93
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 68

   61 num_exp: num_exp _LOP . num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 94
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 69

   62 num_exp: num_exp _RELOP . num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 95
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 70

   46 try_part: _TRY _COLON new_line . body
   76 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 58
    _INDENT    shift, and go to state 96

    body  go to state 97


State 71

   44 while_part: _WHILE num_exp _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 98


State 72

   21 multi_assign_vars: _ID _COMMA _ID .

    $default  reduce using rule 21 (multi_assign_vars)


State 73

   27 function_call: _ID _LPAREN arguments . _RPAREN
   29 arguments: arguments . args

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _RPAREN    shift, and go to state 99
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    args           go to state 100
    num_exp        go to state 101
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 74

   19 assign_statement: _ID _ASSIGN num_exp .
   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69

    $default  reduce using rule 19 (assign_statement)


State 75

   22 multi_assign_vars: multi_assign_vars _COMMA _ID .

    $default  reduce using rule 22 (multi_assign_vars)


State 76

   23 multi_assign_values: _ASSIGN num_exp . _COMMA num_exp
   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _COMMA       shift, and go to state 102
    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69


State 77

   24 multi_assign_values: multi_assign_values _COMMA . num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 103
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 78

   42 elif_part: elif_part _ELIF . num_exp _COLON new_line body

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 104
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 79

   39 if_statement: if_part elif_part else_part .

    $default  reduce using rule 39 (if_statement)


State 80

   55 else_part: _ELSE _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 105


State 81

   53 finally_or_else_part: _ELSE . except_finally_body

    _COLON  shift, and go to state 106

    except_finally_body  go to state 107


State 82

   48 except_part: except_part _EXCEPT . _ID except_finally_body
   49            | except_part _EXCEPT . except_finally_body

    _COLON  shift, and go to state 106
    _ID     shift, and go to state 108

    except_finally_body  go to state 109


State 83

   52 finally_or_else_part: _FINALLY . except_finally_body

    _COLON  shift, and go to state 106

    except_finally_body  go to state 110


State 84

   45 try_except_statement: try_part except_part finally_or_else_part .

    $default  reduce using rule 45 (try_except_statement)


State 85

   34 parameters: _ID .
   38 param_with_default_val: _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 111

    $default  reduce using rule 34 (parameters)


State 86

   32 function_def: _DEF _ID _LPAREN parameters . _RPAREN _COLON new_line body
   36 parameters: parameters . _COMMA _ID
   37           | parameters . _COMMA param_with_default_val

    _COMMA   shift, and go to state 112
    _RPAREN  shift, and go to state 113


State 87

   35 parameters: param_with_default_val .

    $default  reduce using rule 35 (parameters)


State 88

   71 list_elements: list_elements _COMMA . num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 114
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 89

   68 list: _LBRACKET list_elements _RBRACKET .

    $default  reduce using rule 68 (list)


State 90

   66 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 66 (exp)


State 91

   40 if_part: _IF num_exp _COLON new_line . body
   76 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 58
    _INDENT    shift, and go to state 96

    body  go to state 115


State 92

   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   59        | num_exp _ADD_SUB_OP num_exp .
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _MUL_DIV_OP  shift, and go to state 67

    $default  reduce using rule 59 (num_exp)


State 93

   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   60        | num_exp _MUL_DIV_OP num_exp .
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    $default  reduce using rule 60 (num_exp)


State 94

   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   61        | num_exp _LOP num_exp .
   62        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _RELOP       shift, and go to state 69

    $default  reduce using rule 61 (num_exp)


State 95

   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp
   62        | num_exp _RELOP num_exp .

    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67

    $default  reduce using rule 62 (num_exp)


State 96

   56 body: _INDENT . statement_list _DEDENT

    _BREAK     shift, and go to state 2
    _CONTINUE  shift, and go to state 3
    _DEF       shift, and go to state 4
    _IF        shift, and go to state 5
    _PASS      shift, and go to state 6
    _RETURN    shift, and go to state 7
    _TRY       shift, and go to state 8
    _WHILE     shift, and go to state 9
    _ID        shift, and go to state 10

    statement_list          go to state 116
    statement               go to state 13
    simple_statement        go to state 14
    compound_statement      go to state 15
    assign_statement        go to state 16
    multi_assign_statement  go to state 17
    multi_assign_vars       go to state 18
    return_statement        go to state 19
    function_call           go to state 20
    function_def            go to state 21
    if_statement            go to state 22
    if_part                 go to state 23
    while_statement         go to state 24
    while_part              go to state 25
    try_except_statement    go to state 26
    try_part                go to state 27


State 97

   46 try_part: _TRY _COLON new_line body .

    $default  reduce using rule 46 (try_part)


State 98

   44 while_part: _WHILE num_exp _COLON new_line . body
   76 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 58
    _INDENT    shift, and go to state 96

    body  go to state 117


State 99

   27 function_call: _ID _LPAREN arguments _RPAREN .

    $default  reduce using rule 27 (function_call)


State 100

   29 arguments: arguments args .
   31 args: args . _COMMA num_exp

    _COMMA  shift, and go to state 118

    $default  reduce using rule 29 (arguments)


State 101

   30 args: num_exp .
   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69

    $default  reduce using rule 30 (args)


State 102

   23 multi_assign_values: _ASSIGN num_exp _COMMA . num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 119
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 103

   24 multi_assign_values: multi_assign_values _COMMA num_exp .
   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69

    $default  reduce using rule 24 (multi_assign_values)


State 104

   42 elif_part: elif_part _ELIF num_exp . _COLON new_line body
   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _COLON       shift, and go to state 120
    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69


State 105

   55 else_part: _ELSE _COLON new_line . body
   76 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 58
    _INDENT    shift, and go to state 96

    body  go to state 121


State 106

   50 except_finally_body: _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 122


State 107

   53 finally_or_else_part: _ELSE except_finally_body .

    $default  reduce using rule 53 (finally_or_else_part)


State 108

   48 except_part: except_part _EXCEPT _ID . except_finally_body

    _COLON  shift, and go to state 106

    except_finally_body  go to state 123


State 109

   49 except_part: except_part _EXCEPT except_finally_body .

    $default  reduce using rule 49 (except_part)


State 110

   52 finally_or_else_part: _FINALLY except_finally_body .

    $default  reduce using rule 52 (finally_or_else_part)


State 111

   38 param_with_default_val: _ID _ASSIGN . num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 124
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 112

   36 parameters: parameters _COMMA . _ID
   37           | parameters _COMMA . param_with_default_val

    _ID  shift, and go to state 125

    param_with_default_val  go to state 126


State 113

   32 function_def: _DEF _ID _LPAREN parameters _RPAREN . _COLON new_line body

    _COLON  shift, and go to state 127


State 114

   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp
   71 list_elements: list_elements _COMMA num_exp .

    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69

    $default  reduce using rule 71 (list_elements)


State 115

   40 if_part: _IF num_exp _COLON new_line body .

    $default  reduce using rule 40 (if_part)


State 116

    5 statement_list: statement_list . statement
   56 body: _INDENT statement_list . _DEDENT

    _DEDENT    shift, and go to state 128
    _BREAK     shift, and go to state 2
    _CONTINUE  shift, and go to state 3
    _DEF       shift, and go to state 4
    _IF        shift, and go to state 5
    _PASS      shift, and go to state 6
    _RETURN    shift, and go to state 7
    _TRY       shift, and go to state 8
    _WHILE     shift, and go to state 9
    _ID        shift, and go to state 10

    statement               go to state 49
    simple_statement        go to state 14
    compound_statement      go to state 15
    assign_statement        go to state 16
    multi_assign_statement  go to state 17
    multi_assign_vars       go to state 18
    return_statement        go to state 19
    function_call           go to state 20
    function_def            go to state 21
    if_statement            go to state 22
    if_part                 go to state 23
    while_statement         go to state 24
    while_part              go to state 25
    try_except_statement    go to state 26
    try_part                go to state 27


State 117

   44 while_part: _WHILE num_exp _COLON new_line body .

    $default  reduce using rule 44 (while_part)


State 118

   31 args: args _COMMA . num_exp

    _NOT       shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _LPAREN    shift, and go to state 32
    _ID        shift, and go to state 33
    _NUM_BOOL  shift, and go to state 34
    _STRING    shift, and go to state 35
    _NONE      shift, and go to state 36

    function_call  go to state 37
    num_exp        go to state 129
    exp            go to state 39
    list           go to state 40
    literal        go to state 41


State 119

   23 multi_assign_values: _ASSIGN num_exp _COMMA num_exp .
   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69

    $default  reduce using rule 23 (multi_assign_values)


State 120

   42 elif_part: elif_part _ELIF num_exp _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 130


State 121

   55 else_part: _ELSE _COLON new_line body .

    $default  reduce using rule 55 (else_part)


State 122

   50 except_finally_body: _COLON new_line . body
   76 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 58
    _INDENT    shift, and go to state 96

    body  go to state 131


State 123

   48 except_part: except_part _EXCEPT _ID except_finally_body .

    $default  reduce using rule 48 (except_part)


State 124

   38 param_with_default_val: _ID _ASSIGN num_exp .
   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69

    $default  reduce using rule 38 (param_with_default_val)


State 125

   36 parameters: parameters _COMMA _ID .
   38 param_with_default_val: _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 111

    $default  reduce using rule 36 (parameters)


State 126

   37 parameters: parameters _COMMA param_with_default_val .

    $default  reduce using rule 37 (parameters)


State 127

   32 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 132


State 128

   56 body: _INDENT statement_list _DEDENT .

    $default  reduce using rule 56 (body)


State 129

   31 args: args _COMMA num_exp .
   59 num_exp: num_exp . _ADD_SUB_OP num_exp
   60        | num_exp . _MUL_DIV_OP num_exp
   61        | num_exp . _LOP num_exp
   62        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 66
    _MUL_DIV_OP  shift, and go to state 67
    _LOP         shift, and go to state 68
    _RELOP       shift, and go to state 69

    $default  reduce using rule 31 (args)


State 130

   42 elif_part: elif_part _ELIF num_exp _COLON new_line . body
   76 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 58
    _INDENT    shift, and go to state 96

    body  go to state 133


State 131

   50 except_finally_body: _COLON new_line body .

    $default  reduce using rule 50 (except_finally_body)


State 132

   32 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON new_line . body
   76 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 58
    _INDENT    shift, and go to state 96

    body  go to state 134


State 133

   42 elif_part: elif_part _ELIF num_exp _COLON new_line body .

    $default  reduce using rule 42 (elif_part)


State 134

   32 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON new_line body .

    $default  reduce using rule 32 (function_def)
