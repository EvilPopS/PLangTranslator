Terminals unused in grammar

    _AND
    _OR


State 0 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce


Grammar

    0 $accept: file $end

    1 file: %empty
    2     | statement_list
    3     | new_line statement_list
    4     | file new_line

    5 statement_list: statement
    6               | statement_list statement

    7 statement: simple_statement new_line
    8          | compound_statement

    9 simple_statement: assign_statement
   10                 | multi_assign_statement
   11                 | return_statement
   12                 | func_meth_call_or_class_inst
   13                 | _BREAK
   14                 | _CONTINUE
   15                 | _PASS

   16 compound_statement: function_def
   17                   | class_def
   18                   | if_statement
   19                   | while_statement
   20                   | for_statement
   21                   | try_except_statement

   22 assign_statement: _ID _ASSIGN num_exp

   23 multi_assign_statement: multi_assign_vars multi_assign_values

   24 multi_assign_vars: _ID _COMMA _ID
   25                  | multi_assign_vars _COMMA _ID

   26 $@1: %empty

   27 multi_assign_values: _ASSIGN num_exp $@1 _COMMA num_exp
   28                    | multi_assign_values _COMMA num_exp

   29 return_statement: _RETURN
   30                 | _RETURN num_exp

   31 func_meth_call_or_class_inst: _ID _LPAREN arguments _RPAREN
   32                             | _ID _DOT _ID _LPAREN arguments _RPAREN
   33                             | func_meth_call_or_class_inst _DOT _ID _LPAREN arguments _RPAREN

   34 arguments: %empty
   35          | arguments args

   36 args: num_exp
   37     | args _COMMA num_exp

   38 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON new_line body

   39 parameters: %empty
   40           | _ID
   41           | param_with_default_val
   42           | parameters _COMMA _ID
   43           | parameters _COMMA param_with_default_val

   44 param_with_default_val: _ID _ASSIGN num_exp

   45 class_def: _CLASS _ID _COLON new_line class_body

   46 class_body: _INDENT class_methods _DEDENT

   47 class_methods: singular_method
   48              | class_methods singular_method

   49 singular_method: _DEF _INIT _LPAREN _ID init_method_params _RPAREN _COLON new_line body
   50                | function_def

   51 init_method_params: %empty
   52                   | _COMMA parameters

   53 if_statement: if_part elif_part else_part

   54 if_part: _IF num_exp _COLON new_line body

   55 elif_part: %empty
   56          | elif_part _ELIF num_exp _COLON new_line body

   57 $@2: %empty

   58 $@3: %empty

   59 while_statement: _WHILE num_exp _COLON new_line $@2 body $@3 else_part

   60 $@4: %empty

   61 $@5: %empty

   62 for_statement: _FOR _ID _IN num_exp _COLON new_line $@4 body $@5 else_part

   63 try_except_statement: _TRY _COLON new_line body except_part finally_or_else_part

   64 except_part: %empty
   65            | except_part _EXCEPT _ID _COLON new_line body
   66            | except_part _EXCEPT _COLON new_line body

   67 finally_or_else_part: %empty
   68                     | _FINALLY _COLON new_line body
   69                     | _ELSE _COLON new_line body

   70 else_part: %empty
   71          | _ELSE _COLON new_line body

   72 body: _INDENT statement_list _DEDENT

   73 num_exp: exp
   74        | _NOT num_exp
   75        | num_exp _ADD_SUB_OP num_exp
   76        | num_exp _MUL_DIV_OP num_exp
   77        | num_exp _LOP num_exp
   78        | num_exp _RELOP num_exp

   79 exp: literal
   80    | _ID
   81    | func_meth_call_or_class_inst
   82    | _LPAREN num_exp _RPAREN
   83    | list

   84 list: _LBRACKET list_elements _RBRACKET

   85 list_elements: %empty
   86              | num_exp
   87              | list_elements _COMMA num_exp

   88 literal: _NUM_BOOL
   89        | _STRING
   90        | _NONE

   91 new_line: _NEW_LINE
   92         | new_line _NEW_LINE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _NEW_LINE (258) 91 92
    _INDENT (259) 46 72
    _DEDENT (260) 46 72
    _INIT (261) 49
    _AND (262)
    _BREAK (263) 13
    _CLASS (264) 45
    _CONTINUE (265) 14
    _DEF (266) 38 49
    _ELIF (267) 56
    _ELSE (268) 69 71
    _EXCEPT (269) 65 66
    _FINALLY (270) 68
    _FOR (271) 62
    _IF (272) 54
    _IN (273) 62
    _NOT (274) 74
    _OR (275)
    _PASS (276) 15
    _RETURN (277) 29 30
    _TRY (278) 63
    _WHILE (279) 59
    _COMMA (280) 24 25 27 28 37 42 43 52 87
    _DOT (281) 32 33
    _COLON (282) 38 45 49 54 56 59 62 63 65 66 68 69 71
    _LBRACKET (283) 84
    _RBRACKET (284) 84
    _LPAREN (285) 31 32 33 38 49 82
    _RPAREN (286) 31 32 33 38 49 82
    _ASSIGN (287) 22 27 44
    _LOP <i> (288) 77
    _RELOP <i> (289) 78
    _ADD_SUB_OP <i> (290) 75
    _MUL_DIV_OP <i> (291) 76
    _ID <s> (292) 22 24 25 31 32 33 38 40 42 44 45 49 62 65 80
    _NUM_BOOL <s> (293) 88
    _STRING <s> (294) 89
    _NONE <s> (295) 90
    PAREN_ASSOC_TOKEN (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    file (43)
        on left: 1 2 3 4
        on right: 0 4
    statement_list (44)
        on left: 5 6
        on right: 2 3 6 72
    statement (45)
        on left: 7 8
        on right: 5 6
    simple_statement (46)
        on left: 9 10 11 12 13 14 15
        on right: 7
    compound_statement (47)
        on left: 16 17 18 19 20 21
        on right: 8
    assign_statement (48)
        on left: 22
        on right: 9
    multi_assign_statement (49)
        on left: 23
        on right: 10
    multi_assign_vars (50)
        on left: 24 25
        on right: 23 25
    multi_assign_values (51)
        on left: 27 28
        on right: 23 28
    $@1 (52)
        on left: 26
        on right: 27
    return_statement (53)
        on left: 29 30
        on right: 11
    func_meth_call_or_class_inst (54)
        on left: 31 32 33
        on right: 12 33 81
    arguments (55)
        on left: 34 35
        on right: 31 32 33 35
    args (56)
        on left: 36 37
        on right: 35 37
    function_def (57)
        on left: 38
        on right: 16 50
    parameters (58)
        on left: 39 40 41 42 43
        on right: 38 42 43 52
    param_with_default_val (59)
        on left: 44
        on right: 41 43
    class_def (60)
        on left: 45
        on right: 17
    class_body (61)
        on left: 46
        on right: 45
    class_methods (62)
        on left: 47 48
        on right: 46 48
    singular_method (63)
        on left: 49 50
        on right: 47 48
    init_method_params (64)
        on left: 51 52
        on right: 49
    if_statement (65)
        on left: 53
        on right: 18
    if_part (66)
        on left: 54
        on right: 53
    elif_part (67)
        on left: 55 56
        on right: 53 56
    while_statement (68)
        on left: 59
        on right: 19
    $@2 (69)
        on left: 57
        on right: 59
    $@3 (70)
        on left: 58
        on right: 59
    for_statement (71)
        on left: 62
        on right: 20
    $@4 (72)
        on left: 60
        on right: 62
    $@5 (73)
        on left: 61
        on right: 62
    try_except_statement (74)
        on left: 63
        on right: 21
    except_part (75)
        on left: 64 65 66
        on right: 63 65 66
    finally_or_else_part (76)
        on left: 67 68 69
        on right: 63
    else_part (77)
        on left: 70 71
        on right: 53 59 62
    body (78)
        on left: 72
        on right: 38 49 54 56 59 62 63 65 66 68 69 71
    num_exp <i> (79)
        on left: 73 74 75 76 77 78
        on right: 22 27 28 30 36 37 44 54 56 59 62 74 75 76 77 78 82 86 87
    exp <i> (80)
        on left: 79 80 81 82 83
        on right: 73
    list (81)
        on left: 84
        on right: 83
    list_elements (82)
        on left: 85 86 87
        on right: 84 87
    literal <i> (83)
        on left: 88 89 90
        on right: 79
    new_line (84)
        on left: 91 92
        on right: 3 4 7 38 45 49 54 56 59 62 63 65 66 68 69 71 92


State 0

    0 $accept: . file $end

    _NEW_LINE  shift, and go to state 1
    _BREAK     shift, and go to state 2
    _CLASS     shift, and go to state 3
    _CONTINUE  shift, and go to state 4
    _DEF       shift, and go to state 5
    _FOR       shift, and go to state 6
    _IF        shift, and go to state 7
    _PASS      shift, and go to state 8
    _RETURN    shift, and go to state 9
    _TRY       shift, and go to state 10
    _WHILE     shift, and go to state 11
    _ID        shift, and go to state 12

    _NEW_LINE  [reduce using rule 1 (file)]
    $default   reduce using rule 1 (file)

    file                          go to state 13
    statement_list                go to state 14
    statement                     go to state 15
    simple_statement              go to state 16
    compound_statement            go to state 17
    assign_statement              go to state 18
    multi_assign_statement        go to state 19
    multi_assign_vars             go to state 20
    return_statement              go to state 21
    func_meth_call_or_class_inst  go to state 22
    function_def                  go to state 23
    class_def                     go to state 24
    if_statement                  go to state 25
    if_part                       go to state 26
    while_statement               go to state 27
    for_statement                 go to state 28
    try_except_statement          go to state 29
    new_line                      go to state 30


State 1

   91 new_line: _NEW_LINE .

    $default  reduce using rule 91 (new_line)


State 2

   13 simple_statement: _BREAK .

    $default  reduce using rule 13 (simple_statement)


State 3

   45 class_def: _CLASS . _ID _COLON new_line class_body

    _ID  shift, and go to state 31


State 4

   14 simple_statement: _CONTINUE .

    $default  reduce using rule 14 (simple_statement)


State 5

   38 function_def: _DEF . _ID _LPAREN parameters _RPAREN _COLON new_line body

    _ID  shift, and go to state 32


State 6

   62 for_statement: _FOR . _ID _IN num_exp _COLON new_line $@4 body $@5 else_part

    _ID  shift, and go to state 33


State 7

   54 if_part: _IF . num_exp _COLON new_line body

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 42
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 8

   15 simple_statement: _PASS .

    $default  reduce using rule 15 (simple_statement)


State 9

   29 return_statement: _RETURN .
   30                 | _RETURN . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    $default  reduce using rule 29 (return_statement)

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 46
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 10

   63 try_except_statement: _TRY . _COLON new_line body except_part finally_or_else_part

    _COLON  shift, and go to state 47


State 11

   59 while_statement: _WHILE . num_exp _COLON new_line $@2 body $@3 else_part

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 48
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 12

   22 assign_statement: _ID . _ASSIGN num_exp
   24 multi_assign_vars: _ID . _COMMA _ID
   31 func_meth_call_or_class_inst: _ID . _LPAREN arguments _RPAREN
   32                             | _ID . _DOT _ID _LPAREN arguments _RPAREN

    _COMMA   shift, and go to state 49
    _DOT     shift, and go to state 50
    _LPAREN  shift, and go to state 51
    _ASSIGN  shift, and go to state 52


State 13

    0 $accept: file . $end
    4 file: file . new_line

    $end       shift, and go to state 53
    _NEW_LINE  shift, and go to state 1

    new_line  go to state 54


State 14

    2 file: statement_list .
    6 statement_list: statement_list . statement

    _BREAK     shift, and go to state 2
    _CLASS     shift, and go to state 3
    _CONTINUE  shift, and go to state 4
    _DEF       shift, and go to state 5
    _FOR       shift, and go to state 6
    _IF        shift, and go to state 7
    _PASS      shift, and go to state 8
    _RETURN    shift, and go to state 9
    _TRY       shift, and go to state 10
    _WHILE     shift, and go to state 11
    _ID        shift, and go to state 12

    $default  reduce using rule 2 (file)

    statement                     go to state 55
    simple_statement              go to state 16
    compound_statement            go to state 17
    assign_statement              go to state 18
    multi_assign_statement        go to state 19
    multi_assign_vars             go to state 20
    return_statement              go to state 21
    func_meth_call_or_class_inst  go to state 22
    function_def                  go to state 23
    class_def                     go to state 24
    if_statement                  go to state 25
    if_part                       go to state 26
    while_statement               go to state 27
    for_statement                 go to state 28
    try_except_statement          go to state 29


State 15

    5 statement_list: statement .

    $default  reduce using rule 5 (statement_list)


State 16

    7 statement: simple_statement . new_line

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 56


State 17

    8 statement: compound_statement .

    $default  reduce using rule 8 (statement)


State 18

    9 simple_statement: assign_statement .

    $default  reduce using rule 9 (simple_statement)


State 19

   10 simple_statement: multi_assign_statement .

    $default  reduce using rule 10 (simple_statement)


State 20

   23 multi_assign_statement: multi_assign_vars . multi_assign_values
   25 multi_assign_vars: multi_assign_vars . _COMMA _ID

    _COMMA   shift, and go to state 57
    _ASSIGN  shift, and go to state 58

    multi_assign_values  go to state 59


State 21

   11 simple_statement: return_statement .

    $default  reduce using rule 11 (simple_statement)


State 22

   12 simple_statement: func_meth_call_or_class_inst .
   33 func_meth_call_or_class_inst: func_meth_call_or_class_inst . _DOT _ID _LPAREN arguments _RPAREN

    _DOT  shift, and go to state 60

    $default  reduce using rule 12 (simple_statement)


State 23

   16 compound_statement: function_def .

    $default  reduce using rule 16 (compound_statement)


State 24

   17 compound_statement: class_def .

    $default  reduce using rule 17 (compound_statement)


State 25

   18 compound_statement: if_statement .

    $default  reduce using rule 18 (compound_statement)


State 26

   53 if_statement: if_part . elif_part else_part

    $default  reduce using rule 55 (elif_part)

    elif_part  go to state 61


State 27

   19 compound_statement: while_statement .

    $default  reduce using rule 19 (compound_statement)


State 28

   20 compound_statement: for_statement .

    $default  reduce using rule 20 (compound_statement)


State 29

   21 compound_statement: try_except_statement .

    $default  reduce using rule 21 (compound_statement)


State 30

    3 file: new_line . statement_list
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62
    _BREAK     shift, and go to state 2
    _CLASS     shift, and go to state 3
    _CONTINUE  shift, and go to state 4
    _DEF       shift, and go to state 5
    _FOR       shift, and go to state 6
    _IF        shift, and go to state 7
    _PASS      shift, and go to state 8
    _RETURN    shift, and go to state 9
    _TRY       shift, and go to state 10
    _WHILE     shift, and go to state 11
    _ID        shift, and go to state 12

    statement_list                go to state 63
    statement                     go to state 15
    simple_statement              go to state 16
    compound_statement            go to state 17
    assign_statement              go to state 18
    multi_assign_statement        go to state 19
    multi_assign_vars             go to state 20
    return_statement              go to state 21
    func_meth_call_or_class_inst  go to state 22
    function_def                  go to state 23
    class_def                     go to state 24
    if_statement                  go to state 25
    if_part                       go to state 26
    while_statement               go to state 27
    for_statement                 go to state 28
    try_except_statement          go to state 29


State 31

   45 class_def: _CLASS _ID . _COLON new_line class_body

    _COLON  shift, and go to state 64


State 32

   38 function_def: _DEF _ID . _LPAREN parameters _RPAREN _COLON new_line body

    _LPAREN  shift, and go to state 65


State 33

   62 for_statement: _FOR _ID . _IN num_exp _COLON new_line $@4 body $@5 else_part

    _IN  shift, and go to state 66


State 34

   74 num_exp: _NOT . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 67
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 35

   84 list: _LBRACKET . list_elements _RBRACKET

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    $default  reduce using rule 85 (list_elements)

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 68
    exp                           go to state 43
    list                          go to state 44
    list_elements                 go to state 69
    literal                       go to state 45


State 36

   82 exp: _LPAREN . num_exp _RPAREN

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 70
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 37

   31 func_meth_call_or_class_inst: _ID . _LPAREN arguments _RPAREN
   32                             | _ID . _DOT _ID _LPAREN arguments _RPAREN
   80 exp: _ID .

    _DOT     shift, and go to state 50
    _LPAREN  shift, and go to state 51

    $default  reduce using rule 80 (exp)


State 38

   88 literal: _NUM_BOOL .

    $default  reduce using rule 88 (literal)


State 39

   89 literal: _STRING .

    $default  reduce using rule 89 (literal)


State 40

   90 literal: _NONE .

    $default  reduce using rule 90 (literal)


State 41

   33 func_meth_call_or_class_inst: func_meth_call_or_class_inst . _DOT _ID _LPAREN arguments _RPAREN
   81 exp: func_meth_call_or_class_inst .

    _DOT  shift, and go to state 60

    $default  reduce using rule 81 (exp)


State 42

   54 if_part: _IF num_exp . _COLON new_line body
   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _COLON       shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75


State 43

   73 num_exp: exp .

    $default  reduce using rule 73 (num_exp)


State 44

   83 exp: list .

    $default  reduce using rule 83 (exp)


State 45

   79 exp: literal .

    $default  reduce using rule 79 (exp)


State 46

   30 return_statement: _RETURN num_exp .
   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 30 (return_statement)


State 47

   63 try_except_statement: _TRY _COLON . new_line body except_part finally_or_else_part

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 76


State 48

   59 while_statement: _WHILE num_exp . _COLON new_line $@2 body $@3 else_part
   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _COLON       shift, and go to state 77
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75


State 49

   24 multi_assign_vars: _ID _COMMA . _ID

    _ID  shift, and go to state 78


State 50

   32 func_meth_call_or_class_inst: _ID _DOT . _ID _LPAREN arguments _RPAREN

    _ID  shift, and go to state 79


State 51

   31 func_meth_call_or_class_inst: _ID _LPAREN . arguments _RPAREN

    $default  reduce using rule 34 (arguments)

    arguments  go to state 80


State 52

   22 assign_statement: _ID _ASSIGN . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 81
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 53

    0 $accept: file $end .

    $default  accept


State 54

    4 file: file new_line .
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62

    _NEW_LINE  [reduce using rule 4 (file)]
    $default   reduce using rule 4 (file)


State 55

    6 statement_list: statement_list statement .

    $default  reduce using rule 6 (statement_list)


State 56

    7 statement: simple_statement new_line .
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62

    _NEW_LINE  [reduce using rule 7 (statement)]
    $default   reduce using rule 7 (statement)


State 57

   25 multi_assign_vars: multi_assign_vars _COMMA . _ID

    _ID  shift, and go to state 82


State 58

   27 multi_assign_values: _ASSIGN . num_exp $@1 _COMMA num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 83
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 59

   23 multi_assign_statement: multi_assign_vars multi_assign_values .
   28 multi_assign_values: multi_assign_values . _COMMA num_exp

    _COMMA  shift, and go to state 84

    $default  reduce using rule 23 (multi_assign_statement)


State 60

   33 func_meth_call_or_class_inst: func_meth_call_or_class_inst _DOT . _ID _LPAREN arguments _RPAREN

    _ID  shift, and go to state 85


State 61

   53 if_statement: if_part elif_part . else_part
   56 elif_part: elif_part . _ELIF num_exp _COLON new_line body

    _ELIF  shift, and go to state 86
    _ELSE  shift, and go to state 87

    $default  reduce using rule 70 (else_part)

    else_part  go to state 88


State 62

   92 new_line: new_line _NEW_LINE .

    $default  reduce using rule 92 (new_line)


State 63

    3 file: new_line statement_list .
    6 statement_list: statement_list . statement

    _BREAK     shift, and go to state 2
    _CLASS     shift, and go to state 3
    _CONTINUE  shift, and go to state 4
    _DEF       shift, and go to state 5
    _FOR       shift, and go to state 6
    _IF        shift, and go to state 7
    _PASS      shift, and go to state 8
    _RETURN    shift, and go to state 9
    _TRY       shift, and go to state 10
    _WHILE     shift, and go to state 11
    _ID        shift, and go to state 12

    $default  reduce using rule 3 (file)

    statement                     go to state 55
    simple_statement              go to state 16
    compound_statement            go to state 17
    assign_statement              go to state 18
    multi_assign_statement        go to state 19
    multi_assign_vars             go to state 20
    return_statement              go to state 21
    func_meth_call_or_class_inst  go to state 22
    function_def                  go to state 23
    class_def                     go to state 24
    if_statement                  go to state 25
    if_part                       go to state 26
    while_statement               go to state 27
    for_statement                 go to state 28
    try_except_statement          go to state 29


State 64

   45 class_def: _CLASS _ID _COLON . new_line class_body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 89


State 65

   38 function_def: _DEF _ID _LPAREN . parameters _RPAREN _COLON new_line body

    _ID  shift, and go to state 90

    $default  reduce using rule 39 (parameters)

    parameters              go to state 91
    param_with_default_val  go to state 92


State 66

   62 for_statement: _FOR _ID _IN . num_exp _COLON new_line $@4 body $@5 else_part

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 93
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 67

   74 num_exp: _NOT num_exp .
   75        | num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 74 (num_exp)


State 68

   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp
   86 list_elements: num_exp .

    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 86 (list_elements)


State 69

   84 list: _LBRACKET list_elements . _RBRACKET
   87 list_elements: list_elements . _COMMA num_exp

    _COMMA     shift, and go to state 94
    _RBRACKET  shift, and go to state 95


State 70

   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp
   82 exp: _LPAREN num_exp . _RPAREN

    _RPAREN      shift, and go to state 96
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75


State 71

   54 if_part: _IF num_exp _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 97


State 72

   77 num_exp: num_exp _LOP . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 98
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 73

   78 num_exp: num_exp _RELOP . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 99
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 74

   75 num_exp: num_exp _ADD_SUB_OP . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 100
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 75

   76 num_exp: num_exp _MUL_DIV_OP . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 101
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 76

   63 try_except_statement: _TRY _COLON new_line . body except_part finally_or_else_part
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62
    _INDENT    shift, and go to state 102

    body  go to state 103


State 77

   59 while_statement: _WHILE num_exp _COLON . new_line $@2 body $@3 else_part

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 104


State 78

   24 multi_assign_vars: _ID _COMMA _ID .

    $default  reduce using rule 24 (multi_assign_vars)


State 79

   32 func_meth_call_or_class_inst: _ID _DOT _ID . _LPAREN arguments _RPAREN

    _LPAREN  shift, and go to state 105


State 80

   31 func_meth_call_or_class_inst: _ID _LPAREN arguments . _RPAREN
   35 arguments: arguments . args

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _RPAREN    shift, and go to state 106
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    args                          go to state 107
    num_exp                       go to state 108
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 81

   22 assign_statement: _ID _ASSIGN num_exp .
   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 22 (assign_statement)


State 82

   25 multi_assign_vars: multi_assign_vars _COMMA _ID .

    $default  reduce using rule 25 (multi_assign_vars)


State 83

   27 multi_assign_values: _ASSIGN num_exp . $@1 _COMMA num_exp
   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 26 ($@1)

    $@1  go to state 109


State 84

   28 multi_assign_values: multi_assign_values _COMMA . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 110
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 85

   33 func_meth_call_or_class_inst: func_meth_call_or_class_inst _DOT _ID . _LPAREN arguments _RPAREN

    _LPAREN  shift, and go to state 111


State 86

   56 elif_part: elif_part _ELIF . num_exp _COLON new_line body

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 112
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 87

   71 else_part: _ELSE . _COLON new_line body

    _COLON  shift, and go to state 113


State 88

   53 if_statement: if_part elif_part else_part .

    $default  reduce using rule 53 (if_statement)


State 89

   45 class_def: _CLASS _ID _COLON new_line . class_body
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62
    _INDENT    shift, and go to state 114

    class_body  go to state 115


State 90

   40 parameters: _ID .
   44 param_with_default_val: _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 116

    $default  reduce using rule 40 (parameters)


State 91

   38 function_def: _DEF _ID _LPAREN parameters . _RPAREN _COLON new_line body
   42 parameters: parameters . _COMMA _ID
   43           | parameters . _COMMA param_with_default_val

    _COMMA   shift, and go to state 117
    _RPAREN  shift, and go to state 118


State 92

   41 parameters: param_with_default_val .

    $default  reduce using rule 41 (parameters)


State 93

   62 for_statement: _FOR _ID _IN num_exp . _COLON new_line $@4 body $@5 else_part
   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _COLON       shift, and go to state 119
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75


State 94

   87 list_elements: list_elements _COMMA . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 120
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 95

   84 list: _LBRACKET list_elements _RBRACKET .

    $default  reduce using rule 84 (list)


State 96

   82 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 82 (exp)


State 97

   54 if_part: _IF num_exp _COLON new_line . body
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62
    _INDENT    shift, and go to state 102

    body  go to state 121


State 98

   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   77        | num_exp _LOP num_exp .
   78        | num_exp . _RELOP num_exp

    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 77 (num_exp)


State 99

   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp
   78        | num_exp _RELOP num_exp .

    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 78 (num_exp)


State 100

   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   75        | num_exp _ADD_SUB_OP num_exp .
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 75 (num_exp)


State 101

   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   76        | num_exp _MUL_DIV_OP num_exp .
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    $default  reduce using rule 76 (num_exp)


State 102

   72 body: _INDENT . statement_list _DEDENT

    _BREAK     shift, and go to state 2
    _CLASS     shift, and go to state 3
    _CONTINUE  shift, and go to state 4
    _DEF       shift, and go to state 5
    _FOR       shift, and go to state 6
    _IF        shift, and go to state 7
    _PASS      shift, and go to state 8
    _RETURN    shift, and go to state 9
    _TRY       shift, and go to state 10
    _WHILE     shift, and go to state 11
    _ID        shift, and go to state 12

    statement_list                go to state 122
    statement                     go to state 15
    simple_statement              go to state 16
    compound_statement            go to state 17
    assign_statement              go to state 18
    multi_assign_statement        go to state 19
    multi_assign_vars             go to state 20
    return_statement              go to state 21
    func_meth_call_or_class_inst  go to state 22
    function_def                  go to state 23
    class_def                     go to state 24
    if_statement                  go to state 25
    if_part                       go to state 26
    while_statement               go to state 27
    for_statement                 go to state 28
    try_except_statement          go to state 29


State 103

   63 try_except_statement: _TRY _COLON new_line body . except_part finally_or_else_part

    $default  reduce using rule 64 (except_part)

    except_part  go to state 123


State 104

   59 while_statement: _WHILE num_exp _COLON new_line . $@2 body $@3 else_part
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62

    $default  reduce using rule 57 ($@2)

    $@2  go to state 124


State 105

   32 func_meth_call_or_class_inst: _ID _DOT _ID _LPAREN . arguments _RPAREN

    $default  reduce using rule 34 (arguments)

    arguments  go to state 125


State 106

   31 func_meth_call_or_class_inst: _ID _LPAREN arguments _RPAREN .

    $default  reduce using rule 31 (func_meth_call_or_class_inst)


State 107

   35 arguments: arguments args .
   37 args: args . _COMMA num_exp

    _COMMA  shift, and go to state 126

    $default  reduce using rule 35 (arguments)


State 108

   36 args: num_exp .
   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 36 (args)


State 109

   27 multi_assign_values: _ASSIGN num_exp $@1 . _COMMA num_exp

    _COMMA  shift, and go to state 127


State 110

   28 multi_assign_values: multi_assign_values _COMMA num_exp .
   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 28 (multi_assign_values)


State 111

   33 func_meth_call_or_class_inst: func_meth_call_or_class_inst _DOT _ID _LPAREN . arguments _RPAREN

    $default  reduce using rule 34 (arguments)

    arguments  go to state 128


State 112

   56 elif_part: elif_part _ELIF num_exp . _COLON new_line body
   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _COLON       shift, and go to state 129
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75


State 113

   71 else_part: _ELSE _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 130


State 114

   46 class_body: _INDENT . class_methods _DEDENT

    _DEF  shift, and go to state 131

    function_def     go to state 132
    class_methods    go to state 133
    singular_method  go to state 134


State 115

   45 class_def: _CLASS _ID _COLON new_line class_body .

    $default  reduce using rule 45 (class_def)


State 116

   44 param_with_default_val: _ID _ASSIGN . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 135
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 117

   42 parameters: parameters _COMMA . _ID
   43           | parameters _COMMA . param_with_default_val

    _ID  shift, and go to state 136

    param_with_default_val  go to state 137


State 118

   38 function_def: _DEF _ID _LPAREN parameters _RPAREN . _COLON new_line body

    _COLON  shift, and go to state 138


State 119

   62 for_statement: _FOR _ID _IN num_exp _COLON . new_line $@4 body $@5 else_part

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 139


State 120

   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp
   87 list_elements: list_elements _COMMA num_exp .

    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 87 (list_elements)


State 121

   54 if_part: _IF num_exp _COLON new_line body .

    $default  reduce using rule 54 (if_part)


State 122

    6 statement_list: statement_list . statement
   72 body: _INDENT statement_list . _DEDENT

    _DEDENT    shift, and go to state 140
    _BREAK     shift, and go to state 2
    _CLASS     shift, and go to state 3
    _CONTINUE  shift, and go to state 4
    _DEF       shift, and go to state 5
    _FOR       shift, and go to state 6
    _IF        shift, and go to state 7
    _PASS      shift, and go to state 8
    _RETURN    shift, and go to state 9
    _TRY       shift, and go to state 10
    _WHILE     shift, and go to state 11
    _ID        shift, and go to state 12

    statement                     go to state 55
    simple_statement              go to state 16
    compound_statement            go to state 17
    assign_statement              go to state 18
    multi_assign_statement        go to state 19
    multi_assign_vars             go to state 20
    return_statement              go to state 21
    func_meth_call_or_class_inst  go to state 22
    function_def                  go to state 23
    class_def                     go to state 24
    if_statement                  go to state 25
    if_part                       go to state 26
    while_statement               go to state 27
    for_statement                 go to state 28
    try_except_statement          go to state 29


State 123

   63 try_except_statement: _TRY _COLON new_line body except_part . finally_or_else_part
   65 except_part: except_part . _EXCEPT _ID _COLON new_line body
   66            | except_part . _EXCEPT _COLON new_line body

    _ELSE     shift, and go to state 141
    _EXCEPT   shift, and go to state 142
    _FINALLY  shift, and go to state 143

    $default  reduce using rule 67 (finally_or_else_part)

    finally_or_else_part  go to state 144


State 124

   59 while_statement: _WHILE num_exp _COLON new_line $@2 . body $@3 else_part

    _INDENT  shift, and go to state 102

    body  go to state 145


State 125

   32 func_meth_call_or_class_inst: _ID _DOT _ID _LPAREN arguments . _RPAREN
   35 arguments: arguments . args

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _RPAREN    shift, and go to state 146
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    args                          go to state 107
    num_exp                       go to state 108
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 126

   37 args: args _COMMA . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 147
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 127

   27 multi_assign_values: _ASSIGN num_exp $@1 _COMMA . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    num_exp                       go to state 148
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 128

   33 func_meth_call_or_class_inst: func_meth_call_or_class_inst _DOT _ID _LPAREN arguments . _RPAREN
   35 arguments: arguments . args

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _RPAREN    shift, and go to state 149
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    func_meth_call_or_class_inst  go to state 41
    args                          go to state 107
    num_exp                       go to state 108
    exp                           go to state 43
    list                          go to state 44
    literal                       go to state 45


State 129

   56 elif_part: elif_part _ELIF num_exp _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 150


State 130

   71 else_part: _ELSE _COLON new_line . body
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62
    _INDENT    shift, and go to state 102

    body  go to state 151


State 131

   38 function_def: _DEF . _ID _LPAREN parameters _RPAREN _COLON new_line body
   49 singular_method: _DEF . _INIT _LPAREN _ID init_method_params _RPAREN _COLON new_line body

    _INIT  shift, and go to state 152
    _ID    shift, and go to state 32


State 132

   50 singular_method: function_def .

    $default  reduce using rule 50 (singular_method)


State 133

   46 class_body: _INDENT class_methods . _DEDENT
   48 class_methods: class_methods . singular_method

    _DEDENT  shift, and go to state 153
    _DEF     shift, and go to state 131

    function_def     go to state 132
    singular_method  go to state 154


State 134

   47 class_methods: singular_method .

    $default  reduce using rule 47 (class_methods)


State 135

   44 param_with_default_val: _ID _ASSIGN num_exp .
   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 44 (param_with_default_val)


State 136

   42 parameters: parameters _COMMA _ID .
   44 param_with_default_val: _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 116

    $default  reduce using rule 42 (parameters)


State 137

   43 parameters: parameters _COMMA param_with_default_val .

    $default  reduce using rule 43 (parameters)


State 138

   38 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 155


State 139

   62 for_statement: _FOR _ID _IN num_exp _COLON new_line . $@4 body $@5 else_part
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62

    $default  reduce using rule 60 ($@4)

    $@4  go to state 156


State 140

   72 body: _INDENT statement_list _DEDENT .

    $default  reduce using rule 72 (body)


State 141

   69 finally_or_else_part: _ELSE . _COLON new_line body

    _COLON  shift, and go to state 157


State 142

   65 except_part: except_part _EXCEPT . _ID _COLON new_line body
   66            | except_part _EXCEPT . _COLON new_line body

    _COLON  shift, and go to state 158
    _ID     shift, and go to state 159


State 143

   68 finally_or_else_part: _FINALLY . _COLON new_line body

    _COLON  shift, and go to state 160


State 144

   63 try_except_statement: _TRY _COLON new_line body except_part finally_or_else_part .

    $default  reduce using rule 63 (try_except_statement)


State 145

   59 while_statement: _WHILE num_exp _COLON new_line $@2 body . $@3 else_part

    $default  reduce using rule 58 ($@3)

    $@3  go to state 161


State 146

   32 func_meth_call_or_class_inst: _ID _DOT _ID _LPAREN arguments _RPAREN .

    $default  reduce using rule 32 (func_meth_call_or_class_inst)


State 147

   37 args: args _COMMA num_exp .
   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 37 (args)


State 148

   27 multi_assign_values: _ASSIGN num_exp $@1 _COMMA num_exp .
   75 num_exp: num_exp . _ADD_SUB_OP num_exp
   76        | num_exp . _MUL_DIV_OP num_exp
   77        | num_exp . _LOP num_exp
   78        | num_exp . _RELOP num_exp

    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73
    _ADD_SUB_OP  shift, and go to state 74
    _MUL_DIV_OP  shift, and go to state 75

    $default  reduce using rule 27 (multi_assign_values)


State 149

   33 func_meth_call_or_class_inst: func_meth_call_or_class_inst _DOT _ID _LPAREN arguments _RPAREN .

    $default  reduce using rule 33 (func_meth_call_or_class_inst)


State 150

   56 elif_part: elif_part _ELIF num_exp _COLON new_line . body
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62
    _INDENT    shift, and go to state 102

    body  go to state 162


State 151

   71 else_part: _ELSE _COLON new_line body .

    $default  reduce using rule 71 (else_part)


State 152

   49 singular_method: _DEF _INIT . _LPAREN _ID init_method_params _RPAREN _COLON new_line body

    _LPAREN  shift, and go to state 163


State 153

   46 class_body: _INDENT class_methods _DEDENT .

    $default  reduce using rule 46 (class_body)


State 154

   48 class_methods: class_methods singular_method .

    $default  reduce using rule 48 (class_methods)


State 155

   38 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON new_line . body
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62
    _INDENT    shift, and go to state 102

    body  go to state 164


State 156

   62 for_statement: _FOR _ID _IN num_exp _COLON new_line $@4 . body $@5 else_part

    _INDENT  shift, and go to state 102

    body  go to state 165


State 157

   69 finally_or_else_part: _ELSE _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 166


State 158

   66 except_part: except_part _EXCEPT _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 167


State 159

   65 except_part: except_part _EXCEPT _ID . _COLON new_line body

    _COLON  shift, and go to state 168


State 160

   68 finally_or_else_part: _FINALLY _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 169


State 161

   59 while_statement: _WHILE num_exp _COLON new_line $@2 body $@3 . else_part

    _ELSE  shift, and go to state 87

    $default  reduce using rule 70 (else_part)

    else_part  go to state 170


State 162

   56 elif_part: elif_part _ELIF num_exp _COLON new_line body .

    $default  reduce using rule 56 (elif_part)


State 163

   49 singular_method: _DEF _INIT _LPAREN . _ID init_method_params _RPAREN _COLON new_line body

    _ID  shift, and go to state 171


State 164

   38 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON new_line body .

    $default  reduce using rule 38 (function_def)


State 165

   62 for_statement: _FOR _ID _IN num_exp _COLON new_line $@4 body . $@5 else_part

    $default  reduce using rule 61 ($@5)

    $@5  go to state 172


State 166

   69 finally_or_else_part: _ELSE _COLON new_line . body
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62
    _INDENT    shift, and go to state 102

    body  go to state 173


State 167

   66 except_part: except_part _EXCEPT _COLON new_line . body
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62
    _INDENT    shift, and go to state 102

    body  go to state 174


State 168

   65 except_part: except_part _EXCEPT _ID _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 175


State 169

   68 finally_or_else_part: _FINALLY _COLON new_line . body
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62
    _INDENT    shift, and go to state 102

    body  go to state 176


State 170

   59 while_statement: _WHILE num_exp _COLON new_line $@2 body $@3 else_part .

    $default  reduce using rule 59 (while_statement)


State 171

   49 singular_method: _DEF _INIT _LPAREN _ID . init_method_params _RPAREN _COLON new_line body

    _COMMA  shift, and go to state 177

    $default  reduce using rule 51 (init_method_params)

    init_method_params  go to state 178


State 172

   62 for_statement: _FOR _ID _IN num_exp _COLON new_line $@4 body $@5 . else_part

    _ELSE  shift, and go to state 87

    $default  reduce using rule 70 (else_part)

    else_part  go to state 179


State 173

   69 finally_or_else_part: _ELSE _COLON new_line body .

    $default  reduce using rule 69 (finally_or_else_part)


State 174

   66 except_part: except_part _EXCEPT _COLON new_line body .

    $default  reduce using rule 66 (except_part)


State 175

   65 except_part: except_part _EXCEPT _ID _COLON new_line . body
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62
    _INDENT    shift, and go to state 102

    body  go to state 180


State 176

   68 finally_or_else_part: _FINALLY _COLON new_line body .

    $default  reduce using rule 68 (finally_or_else_part)


State 177

   52 init_method_params: _COMMA . parameters

    _ID  shift, and go to state 90

    $default  reduce using rule 39 (parameters)

    parameters              go to state 181
    param_with_default_val  go to state 92


State 178

   49 singular_method: _DEF _INIT _LPAREN _ID init_method_params . _RPAREN _COLON new_line body

    _RPAREN  shift, and go to state 182


State 179

   62 for_statement: _FOR _ID _IN num_exp _COLON new_line $@4 body $@5 else_part .

    $default  reduce using rule 62 (for_statement)


State 180

   65 except_part: except_part _EXCEPT _ID _COLON new_line body .

    $default  reduce using rule 65 (except_part)


State 181

   42 parameters: parameters . _COMMA _ID
   43           | parameters . _COMMA param_with_default_val
   52 init_method_params: _COMMA parameters .

    _COMMA  shift, and go to state 117

    $default  reduce using rule 52 (init_method_params)


State 182

   49 singular_method: _DEF _INIT _LPAREN _ID init_method_params _RPAREN . _COLON new_line body

    _COLON  shift, and go to state 183


State 183

   49 singular_method: _DEF _INIT _LPAREN _ID init_method_params _RPAREN _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 184


State 184

   49 singular_method: _DEF _INIT _LPAREN _ID init_method_params _RPAREN _COLON new_line . body
   92 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 62
    _INDENT    shift, and go to state 102

    body  go to state 185


State 185

   49 singular_method: _DEF _INIT _LPAREN _ID init_method_params _RPAREN _COLON new_line body .

    $default  reduce using rule 49 (singular_method)
