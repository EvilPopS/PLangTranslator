Terminals unused in grammar

    _AND
    _OR


State 0 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce


Grammar

    0 $accept: file $end

    1 file: %empty
    2     | statement_list
    3     | new_line statement_list
    4     | file new_line

    5 statement_list: statement
    6               | statement_list statement

    7 statement: simple_statement new_line
    8          | compound_statement

    9 simple_statement: assign_statement
   10                 | multi_assign_statement
   11                 | return_statement
   12                 | function_call
   13                 | _BREAK
   14                 | _CONTINUE
   15                 | _PASS

   16 compound_statement: function_def
   17                   | class_def
   18                   | if_statement
   19                   | while_statement
   20                   | for_statement
   21                   | try_except_statement

   22 assign_statement: _ID _ASSIGN num_exp

   23 multi_assign_statement: multi_assign_vars multi_assign_values

   24 multi_assign_vars: _ID _COMMA _ID
   25                  | multi_assign_vars _COMMA _ID

   26 multi_assign_values: _ASSIGN num_exp _COMMA num_exp
   27                    | multi_assign_values _COMMA num_exp

   28 return_statement: _RETURN
   29                 | _RETURN num_exp

   30 function_call: _ID _LPAREN arguments _RPAREN

   31 arguments: %empty
   32          | arguments args

   33 args: num_exp
   34     | args _COMMA num_exp

   35 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON new_line body

   36 parameters: %empty
   37           | _ID
   38           | param_with_default_val
   39           | parameters _COMMA _ID
   40           | parameters _COMMA param_with_default_val

   41 param_with_default_val: _ID _ASSIGN num_exp

   42 class_def: _CLASS _ID _COLON new_line class_body

   43 class_body: _INDENT class_methods _DEDENT

   44 class_methods: singular_method
   45              | class_methods singular_method

   46 singular_method: _DEF _INIT _LPAREN _ID init_method_params _RPAREN _COLON new_line body
   47                | function_def

   48 init_method_params: %empty
   49                   | _COMMA parameters

   50 if_statement: if_part elif_part else_part

   51 if_part: _IF num_exp _COLON new_line body

   52 elif_part: %empty
   53          | elif_part _ELIF num_exp _COLON new_line body

   54 while_statement: _WHILE num_exp _COLON new_line body else_part

   55 for_statement: _FOR _ID _IN num_exp _COLON new_line body else_part

   56 try_except_statement: _TRY _COLON new_line body except_part finally_or_else_part

   57 except_part: %empty
   58            | except_part _EXCEPT _ID _COLON new_line body
   59            | except_part _EXCEPT _COLON new_line body

   60 finally_or_else_part: %empty
   61                     | _FINALLY _COLON new_line body
   62                     | _ELSE _COLON new_line body

   63 else_part: %empty
   64          | _ELSE _COLON new_line body

   65 body: _INDENT statement_list _DEDENT

   66 num_exp: exp
   67        | _NOT num_exp
   68        | num_exp _ADD_SUB_OP num_exp
   69        | num_exp _MUL_DIV_OP num_exp
   70        | num_exp _LOP num_exp
   71        | num_exp _RELOP num_exp

   72 exp: literal
   73    | _ID
   74    | function_call
   75    | _LPAREN num_exp _RPAREN
   76    | list

   77 list: _LBRACKET list_elements _RBRACKET

   78 list_elements: %empty
   79              | num_exp
   80              | list_elements _COMMA num_exp

   81 literal: _NUM_BOOL
   82        | _STRING
   83        | _NONE

   84 new_line: _NEW_LINE
   85         | new_line _NEW_LINE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _NEW_LINE (258) 84 85
    _INDENT (259) 43 65
    _DEDENT (260) 43 65
    _INIT (261) 46
    _AND (262)
    _BREAK (263) 13
    _CLASS (264) 42
    _CONTINUE (265) 14
    _DEF (266) 35 46
    _ELIF (267) 53
    _ELSE (268) 62 64
    _EXCEPT (269) 58 59
    _FINALLY (270) 61
    _FOR (271) 55
    _IF (272) 51
    _IN (273) 55
    _NOT (274) 67
    _OR (275)
    _PASS (276) 15
    _RETURN (277) 28 29
    _TRY (278) 56
    _WHILE (279) 54
    _COMMA (280) 24 25 26 27 34 39 40 49 80
    _COLON (281) 35 42 46 51 53 54 55 56 58 59 61 62 64
    _LBRACKET (282) 77
    _RBRACKET (283) 77
    _LPAREN (284) 30 35 46 75
    _RPAREN (285) 30 35 46 75
    _ASSIGN (286) 22 26 41
    _ADD_SUB_OP <i> (287) 68
    _MUL_DIV_OP <i> (288) 69
    _LOP <i> (289) 70
    _RELOP <i> (290) 71
    _ID <s> (291) 22 24 25 30 35 37 39 41 42 46 55 58 73
    _NUM_BOOL <s> (292) 81
    _STRING <s> (293) 82
    _NONE <s> (294) 83
    VAR_ID (295)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    file (42)
        on left: 1 2 3 4
        on right: 0 4
    statement_list (43)
        on left: 5 6
        on right: 2 3 6 65
    statement (44)
        on left: 7 8
        on right: 5 6
    simple_statement (45)
        on left: 9 10 11 12 13 14 15
        on right: 7
    compound_statement (46)
        on left: 16 17 18 19 20 21
        on right: 8
    assign_statement (47)
        on left: 22
        on right: 9
    multi_assign_statement (48)
        on left: 23
        on right: 10
    multi_assign_vars (49)
        on left: 24 25
        on right: 23 25
    multi_assign_values (50)
        on left: 26 27
        on right: 23 27
    return_statement (51)
        on left: 28 29
        on right: 11
    function_call (52)
        on left: 30
        on right: 12 74
    arguments (53)
        on left: 31 32
        on right: 30 32
    args (54)
        on left: 33 34
        on right: 32 34
    function_def (55)
        on left: 35
        on right: 16 47
    parameters (56)
        on left: 36 37 38 39 40
        on right: 35 39 40 49
    param_with_default_val (57)
        on left: 41
        on right: 38 40
    class_def (58)
        on left: 42
        on right: 17
    class_body (59)
        on left: 43
        on right: 42
    class_methods (60)
        on left: 44 45
        on right: 43 45
    singular_method (61)
        on left: 46 47
        on right: 44 45
    init_method_params (62)
        on left: 48 49
        on right: 46
    if_statement (63)
        on left: 50
        on right: 18
    if_part (64)
        on left: 51
        on right: 50
    elif_part (65)
        on left: 52 53
        on right: 50 53
    while_statement (66)
        on left: 54
        on right: 19
    for_statement (67)
        on left: 55
        on right: 20
    try_except_statement (68)
        on left: 56
        on right: 21
    except_part (69)
        on left: 57 58 59
        on right: 56 58 59
    finally_or_else_part (70)
        on left: 60 61 62
        on right: 56
    else_part (71)
        on left: 63 64
        on right: 50 54 55
    body (72)
        on left: 65
        on right: 35 46 51 53 54 55 56 58 59 61 62 64
    num_exp (73)
        on left: 66 67 68 69 70 71
        on right: 22 26 27 29 33 34 41 51 53 54 55 67 68 69 70 71 75 79 80
    exp (74)
        on left: 72 73 74 75 76
        on right: 66
    list (75)
        on left: 77
        on right: 76
    list_elements (76)
        on left: 78 79 80
        on right: 77 80
    literal (77)
        on left: 81 82 83
        on right: 72
    new_line (78)
        on left: 84 85
        on right: 3 4 7 35 42 46 51 53 54 55 56 58 59 61 62 64 85


State 0

    0 $accept: . file $end

    _NEW_LINE  shift, and go to state 1
    _BREAK     shift, and go to state 2
    _CLASS     shift, and go to state 3
    _CONTINUE  shift, and go to state 4
    _DEF       shift, and go to state 5
    _FOR       shift, and go to state 6
    _IF        shift, and go to state 7
    _PASS      shift, and go to state 8
    _RETURN    shift, and go to state 9
    _TRY       shift, and go to state 10
    _WHILE     shift, and go to state 11
    _ID        shift, and go to state 12

    _NEW_LINE  [reduce using rule 1 (file)]
    $default   reduce using rule 1 (file)

    file                    go to state 13
    statement_list          go to state 14
    statement               go to state 15
    simple_statement        go to state 16
    compound_statement      go to state 17
    assign_statement        go to state 18
    multi_assign_statement  go to state 19
    multi_assign_vars       go to state 20
    return_statement        go to state 21
    function_call           go to state 22
    function_def            go to state 23
    class_def               go to state 24
    if_statement            go to state 25
    if_part                 go to state 26
    while_statement         go to state 27
    for_statement           go to state 28
    try_except_statement    go to state 29
    new_line                go to state 30


State 1

   84 new_line: _NEW_LINE .

    $default  reduce using rule 84 (new_line)


State 2

   13 simple_statement: _BREAK .

    $default  reduce using rule 13 (simple_statement)


State 3

   42 class_def: _CLASS . _ID _COLON new_line class_body

    _ID  shift, and go to state 31


State 4

   14 simple_statement: _CONTINUE .

    $default  reduce using rule 14 (simple_statement)


State 5

   35 function_def: _DEF . _ID _LPAREN parameters _RPAREN _COLON new_line body

    _ID  shift, and go to state 32


State 6

   55 for_statement: _FOR . _ID _IN num_exp _COLON new_line body else_part

    _ID  shift, and go to state 33


State 7

   51 if_part: _IF . num_exp _COLON new_line body

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 42
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 8

   15 simple_statement: _PASS .

    $default  reduce using rule 15 (simple_statement)


State 9

   28 return_statement: _RETURN .
   29                 | _RETURN . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    $default  reduce using rule 28 (return_statement)

    function_call  go to state 41
    num_exp        go to state 46
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 10

   56 try_except_statement: _TRY . _COLON new_line body except_part finally_or_else_part

    _COLON  shift, and go to state 47


State 11

   54 while_statement: _WHILE . num_exp _COLON new_line body else_part

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 48
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 12

   22 assign_statement: _ID . _ASSIGN num_exp
   24 multi_assign_vars: _ID . _COMMA _ID
   30 function_call: _ID . _LPAREN arguments _RPAREN

    _COMMA   shift, and go to state 49
    _LPAREN  shift, and go to state 50
    _ASSIGN  shift, and go to state 51


State 13

    0 $accept: file . $end
    4 file: file . new_line

    $end       shift, and go to state 52
    _NEW_LINE  shift, and go to state 1

    new_line  go to state 53


State 14

    2 file: statement_list .
    6 statement_list: statement_list . statement

    _BREAK     shift, and go to state 2
    _CLASS     shift, and go to state 3
    _CONTINUE  shift, and go to state 4
    _DEF       shift, and go to state 5
    _FOR       shift, and go to state 6
    _IF        shift, and go to state 7
    _PASS      shift, and go to state 8
    _RETURN    shift, and go to state 9
    _TRY       shift, and go to state 10
    _WHILE     shift, and go to state 11
    _ID        shift, and go to state 12

    $default  reduce using rule 2 (file)

    statement               go to state 54
    simple_statement        go to state 16
    compound_statement      go to state 17
    assign_statement        go to state 18
    multi_assign_statement  go to state 19
    multi_assign_vars       go to state 20
    return_statement        go to state 21
    function_call           go to state 22
    function_def            go to state 23
    class_def               go to state 24
    if_statement            go to state 25
    if_part                 go to state 26
    while_statement         go to state 27
    for_statement           go to state 28
    try_except_statement    go to state 29


State 15

    5 statement_list: statement .

    $default  reduce using rule 5 (statement_list)


State 16

    7 statement: simple_statement . new_line

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 55


State 17

    8 statement: compound_statement .

    $default  reduce using rule 8 (statement)


State 18

    9 simple_statement: assign_statement .

    $default  reduce using rule 9 (simple_statement)


State 19

   10 simple_statement: multi_assign_statement .

    $default  reduce using rule 10 (simple_statement)


State 20

   23 multi_assign_statement: multi_assign_vars . multi_assign_values
   25 multi_assign_vars: multi_assign_vars . _COMMA _ID

    _COMMA   shift, and go to state 56
    _ASSIGN  shift, and go to state 57

    multi_assign_values  go to state 58


State 21

   11 simple_statement: return_statement .

    $default  reduce using rule 11 (simple_statement)


State 22

   12 simple_statement: function_call .

    $default  reduce using rule 12 (simple_statement)


State 23

   16 compound_statement: function_def .

    $default  reduce using rule 16 (compound_statement)


State 24

   17 compound_statement: class_def .

    $default  reduce using rule 17 (compound_statement)


State 25

   18 compound_statement: if_statement .

    $default  reduce using rule 18 (compound_statement)


State 26

   50 if_statement: if_part . elif_part else_part

    $default  reduce using rule 52 (elif_part)

    elif_part  go to state 59


State 27

   19 compound_statement: while_statement .

    $default  reduce using rule 19 (compound_statement)


State 28

   20 compound_statement: for_statement .

    $default  reduce using rule 20 (compound_statement)


State 29

   21 compound_statement: try_except_statement .

    $default  reduce using rule 21 (compound_statement)


State 30

    3 file: new_line . statement_list
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _BREAK     shift, and go to state 2
    _CLASS     shift, and go to state 3
    _CONTINUE  shift, and go to state 4
    _DEF       shift, and go to state 5
    _FOR       shift, and go to state 6
    _IF        shift, and go to state 7
    _PASS      shift, and go to state 8
    _RETURN    shift, and go to state 9
    _TRY       shift, and go to state 10
    _WHILE     shift, and go to state 11
    _ID        shift, and go to state 12

    statement_list          go to state 61
    statement               go to state 15
    simple_statement        go to state 16
    compound_statement      go to state 17
    assign_statement        go to state 18
    multi_assign_statement  go to state 19
    multi_assign_vars       go to state 20
    return_statement        go to state 21
    function_call           go to state 22
    function_def            go to state 23
    class_def               go to state 24
    if_statement            go to state 25
    if_part                 go to state 26
    while_statement         go to state 27
    for_statement           go to state 28
    try_except_statement    go to state 29


State 31

   42 class_def: _CLASS _ID . _COLON new_line class_body

    _COLON  shift, and go to state 62


State 32

   35 function_def: _DEF _ID . _LPAREN parameters _RPAREN _COLON new_line body

    _LPAREN  shift, and go to state 63


State 33

   55 for_statement: _FOR _ID . _IN num_exp _COLON new_line body else_part

    _IN  shift, and go to state 64


State 34

   67 num_exp: _NOT . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 65
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 35

   77 list: _LBRACKET . list_elements _RBRACKET

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    $default  reduce using rule 78 (list_elements)

    function_call  go to state 41
    num_exp        go to state 66
    exp            go to state 43
    list           go to state 44
    list_elements  go to state 67
    literal        go to state 45


State 36

   75 exp: _LPAREN . num_exp _RPAREN

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 68
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 37

   30 function_call: _ID . _LPAREN arguments _RPAREN
   73 exp: _ID .

    _LPAREN  shift, and go to state 50

    $default  reduce using rule 73 (exp)


State 38

   81 literal: _NUM_BOOL .

    $default  reduce using rule 81 (literal)


State 39

   82 literal: _STRING .

    $default  reduce using rule 82 (literal)


State 40

   83 literal: _NONE .

    $default  reduce using rule 83 (literal)


State 41

   74 exp: function_call .

    $default  reduce using rule 74 (exp)


State 42

   51 if_part: _IF num_exp . _COLON new_line body
   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _COLON       shift, and go to state 69
    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73


State 43

   66 num_exp: exp .

    $default  reduce using rule 66 (num_exp)


State 44

   76 exp: list .

    $default  reduce using rule 76 (exp)


State 45

   72 exp: literal .

    $default  reduce using rule 72 (exp)


State 46

   29 return_statement: _RETURN num_exp .
   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73

    $default  reduce using rule 29 (return_statement)


State 47

   56 try_except_statement: _TRY _COLON . new_line body except_part finally_or_else_part

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 74


State 48

   54 while_statement: _WHILE num_exp . _COLON new_line body else_part
   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _COLON       shift, and go to state 75
    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73


State 49

   24 multi_assign_vars: _ID _COMMA . _ID

    _ID  shift, and go to state 76


State 50

   30 function_call: _ID _LPAREN . arguments _RPAREN

    $default  reduce using rule 31 (arguments)

    arguments  go to state 77


State 51

   22 assign_statement: _ID _ASSIGN . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 78
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 52

    0 $accept: file $end .

    $default  accept


State 53

    4 file: file new_line .
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60

    _NEW_LINE  [reduce using rule 4 (file)]
    $default   reduce using rule 4 (file)


State 54

    6 statement_list: statement_list statement .

    $default  reduce using rule 6 (statement_list)


State 55

    7 statement: simple_statement new_line .
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60

    _NEW_LINE  [reduce using rule 7 (statement)]
    $default   reduce using rule 7 (statement)


State 56

   25 multi_assign_vars: multi_assign_vars _COMMA . _ID

    _ID  shift, and go to state 79


State 57

   26 multi_assign_values: _ASSIGN . num_exp _COMMA num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 80
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 58

   23 multi_assign_statement: multi_assign_vars multi_assign_values .
   27 multi_assign_values: multi_assign_values . _COMMA num_exp

    _COMMA  shift, and go to state 81

    $default  reduce using rule 23 (multi_assign_statement)


State 59

   50 if_statement: if_part elif_part . else_part
   53 elif_part: elif_part . _ELIF num_exp _COLON new_line body

    _ELIF  shift, and go to state 82
    _ELSE  shift, and go to state 83

    $default  reduce using rule 63 (else_part)

    else_part  go to state 84


State 60

   85 new_line: new_line _NEW_LINE .

    $default  reduce using rule 85 (new_line)


State 61

    3 file: new_line statement_list .
    6 statement_list: statement_list . statement

    _BREAK     shift, and go to state 2
    _CLASS     shift, and go to state 3
    _CONTINUE  shift, and go to state 4
    _DEF       shift, and go to state 5
    _FOR       shift, and go to state 6
    _IF        shift, and go to state 7
    _PASS      shift, and go to state 8
    _RETURN    shift, and go to state 9
    _TRY       shift, and go to state 10
    _WHILE     shift, and go to state 11
    _ID        shift, and go to state 12

    $default  reduce using rule 3 (file)

    statement               go to state 54
    simple_statement        go to state 16
    compound_statement      go to state 17
    assign_statement        go to state 18
    multi_assign_statement  go to state 19
    multi_assign_vars       go to state 20
    return_statement        go to state 21
    function_call           go to state 22
    function_def            go to state 23
    class_def               go to state 24
    if_statement            go to state 25
    if_part                 go to state 26
    while_statement         go to state 27
    for_statement           go to state 28
    try_except_statement    go to state 29


State 62

   42 class_def: _CLASS _ID _COLON . new_line class_body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 85


State 63

   35 function_def: _DEF _ID _LPAREN . parameters _RPAREN _COLON new_line body

    _ID  shift, and go to state 86

    $default  reduce using rule 36 (parameters)

    parameters              go to state 87
    param_with_default_val  go to state 88


State 64

   55 for_statement: _FOR _ID _IN . num_exp _COLON new_line body else_part

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 89
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 65

   67 num_exp: _NOT num_exp .
   68        | num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _RELOP       shift, and go to state 73

    $default  reduce using rule 67 (num_exp)


State 66

   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp
   79 list_elements: num_exp .

    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73

    $default  reduce using rule 79 (list_elements)


State 67

   77 list: _LBRACKET list_elements . _RBRACKET
   80 list_elements: list_elements . _COMMA num_exp

    _COMMA     shift, and go to state 90
    _RBRACKET  shift, and go to state 91


State 68

   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp
   75 exp: _LPAREN num_exp . _RPAREN

    _RPAREN      shift, and go to state 92
    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73


State 69

   51 if_part: _IF num_exp _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 93


State 70

   68 num_exp: num_exp _ADD_SUB_OP . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 94
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 71

   69 num_exp: num_exp _MUL_DIV_OP . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 95
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 72

   70 num_exp: num_exp _LOP . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 96
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 73

   71 num_exp: num_exp _RELOP . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 97
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 74

   56 try_except_statement: _TRY _COLON new_line . body except_part finally_or_else_part
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 98

    body  go to state 99


State 75

   54 while_statement: _WHILE num_exp _COLON . new_line body else_part

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 100


State 76

   24 multi_assign_vars: _ID _COMMA _ID .

    $default  reduce using rule 24 (multi_assign_vars)


State 77

   30 function_call: _ID _LPAREN arguments . _RPAREN
   32 arguments: arguments . args

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _RPAREN    shift, and go to state 101
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    args           go to state 102
    num_exp        go to state 103
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 78

   22 assign_statement: _ID _ASSIGN num_exp .
   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73

    $default  reduce using rule 22 (assign_statement)


State 79

   25 multi_assign_vars: multi_assign_vars _COMMA _ID .

    $default  reduce using rule 25 (multi_assign_vars)


State 80

   26 multi_assign_values: _ASSIGN num_exp . _COMMA num_exp
   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _COMMA       shift, and go to state 104
    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73


State 81

   27 multi_assign_values: multi_assign_values _COMMA . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 105
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 82

   53 elif_part: elif_part _ELIF . num_exp _COLON new_line body

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 106
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 83

   64 else_part: _ELSE . _COLON new_line body

    _COLON  shift, and go to state 107


State 84

   50 if_statement: if_part elif_part else_part .

    $default  reduce using rule 50 (if_statement)


State 85

   42 class_def: _CLASS _ID _COLON new_line . class_body
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 108

    class_body  go to state 109


State 86

   37 parameters: _ID .
   41 param_with_default_val: _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 110

    $default  reduce using rule 37 (parameters)


State 87

   35 function_def: _DEF _ID _LPAREN parameters . _RPAREN _COLON new_line body
   39 parameters: parameters . _COMMA _ID
   40           | parameters . _COMMA param_with_default_val

    _COMMA   shift, and go to state 111
    _RPAREN  shift, and go to state 112


State 88

   38 parameters: param_with_default_val .

    $default  reduce using rule 38 (parameters)


State 89

   55 for_statement: _FOR _ID _IN num_exp . _COLON new_line body else_part
   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _COLON       shift, and go to state 113
    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73


State 90

   80 list_elements: list_elements _COMMA . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 114
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 91

   77 list: _LBRACKET list_elements _RBRACKET .

    $default  reduce using rule 77 (list)


State 92

   75 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 75 (exp)


State 93

   51 if_part: _IF num_exp _COLON new_line . body
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 98

    body  go to state 115


State 94

   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   68        | num_exp _ADD_SUB_OP num_exp .
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _MUL_DIV_OP  shift, and go to state 71

    $default  reduce using rule 68 (num_exp)


State 95

   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   69        | num_exp _MUL_DIV_OP num_exp .
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    $default  reduce using rule 69 (num_exp)


State 96

   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   70        | num_exp _LOP num_exp .
   71        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _RELOP       shift, and go to state 73

    $default  reduce using rule 70 (num_exp)


State 97

   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp
   71        | num_exp _RELOP num_exp .

    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71

    $default  reduce using rule 71 (num_exp)


State 98

   65 body: _INDENT . statement_list _DEDENT

    _BREAK     shift, and go to state 2
    _CLASS     shift, and go to state 3
    _CONTINUE  shift, and go to state 4
    _DEF       shift, and go to state 5
    _FOR       shift, and go to state 6
    _IF        shift, and go to state 7
    _PASS      shift, and go to state 8
    _RETURN    shift, and go to state 9
    _TRY       shift, and go to state 10
    _WHILE     shift, and go to state 11
    _ID        shift, and go to state 12

    statement_list          go to state 116
    statement               go to state 15
    simple_statement        go to state 16
    compound_statement      go to state 17
    assign_statement        go to state 18
    multi_assign_statement  go to state 19
    multi_assign_vars       go to state 20
    return_statement        go to state 21
    function_call           go to state 22
    function_def            go to state 23
    class_def               go to state 24
    if_statement            go to state 25
    if_part                 go to state 26
    while_statement         go to state 27
    for_statement           go to state 28
    try_except_statement    go to state 29


State 99

   56 try_except_statement: _TRY _COLON new_line body . except_part finally_or_else_part

    $default  reduce using rule 57 (except_part)

    except_part  go to state 117


State 100

   54 while_statement: _WHILE num_exp _COLON new_line . body else_part
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 98

    body  go to state 118


State 101

   30 function_call: _ID _LPAREN arguments _RPAREN .

    $default  reduce using rule 30 (function_call)


State 102

   32 arguments: arguments args .
   34 args: args . _COMMA num_exp

    _COMMA  shift, and go to state 119

    $default  reduce using rule 32 (arguments)


State 103

   33 args: num_exp .
   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73

    $default  reduce using rule 33 (args)


State 104

   26 multi_assign_values: _ASSIGN num_exp _COMMA . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 120
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 105

   27 multi_assign_values: multi_assign_values _COMMA num_exp .
   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73

    $default  reduce using rule 27 (multi_assign_values)


State 106

   53 elif_part: elif_part _ELIF num_exp . _COLON new_line body
   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _COLON       shift, and go to state 121
    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73


State 107

   64 else_part: _ELSE _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 122


State 108

   43 class_body: _INDENT . class_methods _DEDENT

    _DEF  shift, and go to state 123

    function_def     go to state 124
    class_methods    go to state 125
    singular_method  go to state 126


State 109

   42 class_def: _CLASS _ID _COLON new_line class_body .

    $default  reduce using rule 42 (class_def)


State 110

   41 param_with_default_val: _ID _ASSIGN . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 127
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 111

   39 parameters: parameters _COMMA . _ID
   40           | parameters _COMMA . param_with_default_val

    _ID  shift, and go to state 128

    param_with_default_val  go to state 129


State 112

   35 function_def: _DEF _ID _LPAREN parameters _RPAREN . _COLON new_line body

    _COLON  shift, and go to state 130


State 113

   55 for_statement: _FOR _ID _IN num_exp _COLON . new_line body else_part

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 131


State 114

   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp
   80 list_elements: list_elements _COMMA num_exp .

    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73

    $default  reduce using rule 80 (list_elements)


State 115

   51 if_part: _IF num_exp _COLON new_line body .

    $default  reduce using rule 51 (if_part)


State 116

    6 statement_list: statement_list . statement
   65 body: _INDENT statement_list . _DEDENT

    _DEDENT    shift, and go to state 132
    _BREAK     shift, and go to state 2
    _CLASS     shift, and go to state 3
    _CONTINUE  shift, and go to state 4
    _DEF       shift, and go to state 5
    _FOR       shift, and go to state 6
    _IF        shift, and go to state 7
    _PASS      shift, and go to state 8
    _RETURN    shift, and go to state 9
    _TRY       shift, and go to state 10
    _WHILE     shift, and go to state 11
    _ID        shift, and go to state 12

    statement               go to state 54
    simple_statement        go to state 16
    compound_statement      go to state 17
    assign_statement        go to state 18
    multi_assign_statement  go to state 19
    multi_assign_vars       go to state 20
    return_statement        go to state 21
    function_call           go to state 22
    function_def            go to state 23
    class_def               go to state 24
    if_statement            go to state 25
    if_part                 go to state 26
    while_statement         go to state 27
    for_statement           go to state 28
    try_except_statement    go to state 29


State 117

   56 try_except_statement: _TRY _COLON new_line body except_part . finally_or_else_part
   58 except_part: except_part . _EXCEPT _ID _COLON new_line body
   59            | except_part . _EXCEPT _COLON new_line body

    _ELSE     shift, and go to state 133
    _EXCEPT   shift, and go to state 134
    _FINALLY  shift, and go to state 135

    $default  reduce using rule 60 (finally_or_else_part)

    finally_or_else_part  go to state 136


State 118

   54 while_statement: _WHILE num_exp _COLON new_line body . else_part

    _ELSE  shift, and go to state 83

    $default  reduce using rule 63 (else_part)

    else_part  go to state 137


State 119

   34 args: args _COMMA . num_exp

    _NOT       shift, and go to state 34
    _LBRACKET  shift, and go to state 35
    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _NUM_BOOL  shift, and go to state 38
    _STRING    shift, and go to state 39
    _NONE      shift, and go to state 40

    function_call  go to state 41
    num_exp        go to state 138
    exp            go to state 43
    list           go to state 44
    literal        go to state 45


State 120

   26 multi_assign_values: _ASSIGN num_exp _COMMA num_exp .
   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73

    $default  reduce using rule 26 (multi_assign_values)


State 121

   53 elif_part: elif_part _ELIF num_exp _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 139


State 122

   64 else_part: _ELSE _COLON new_line . body
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 98

    body  go to state 140


State 123

   35 function_def: _DEF . _ID _LPAREN parameters _RPAREN _COLON new_line body
   46 singular_method: _DEF . _INIT _LPAREN _ID init_method_params _RPAREN _COLON new_line body

    _INIT  shift, and go to state 141
    _ID    shift, and go to state 32


State 124

   47 singular_method: function_def .

    $default  reduce using rule 47 (singular_method)


State 125

   43 class_body: _INDENT class_methods . _DEDENT
   45 class_methods: class_methods . singular_method

    _DEDENT  shift, and go to state 142
    _DEF     shift, and go to state 123

    function_def     go to state 124
    singular_method  go to state 143


State 126

   44 class_methods: singular_method .

    $default  reduce using rule 44 (class_methods)


State 127

   41 param_with_default_val: _ID _ASSIGN num_exp .
   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73

    $default  reduce using rule 41 (param_with_default_val)


State 128

   39 parameters: parameters _COMMA _ID .
   41 param_with_default_val: _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 110

    $default  reduce using rule 39 (parameters)


State 129

   40 parameters: parameters _COMMA param_with_default_val .

    $default  reduce using rule 40 (parameters)


State 130

   35 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 144


State 131

   55 for_statement: _FOR _ID _IN num_exp _COLON new_line . body else_part
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 98

    body  go to state 145


State 132

   65 body: _INDENT statement_list _DEDENT .

    $default  reduce using rule 65 (body)


State 133

   62 finally_or_else_part: _ELSE . _COLON new_line body

    _COLON  shift, and go to state 146


State 134

   58 except_part: except_part _EXCEPT . _ID _COLON new_line body
   59            | except_part _EXCEPT . _COLON new_line body

    _COLON  shift, and go to state 147
    _ID     shift, and go to state 148


State 135

   61 finally_or_else_part: _FINALLY . _COLON new_line body

    _COLON  shift, and go to state 149


State 136

   56 try_except_statement: _TRY _COLON new_line body except_part finally_or_else_part .

    $default  reduce using rule 56 (try_except_statement)


State 137

   54 while_statement: _WHILE num_exp _COLON new_line body else_part .

    $default  reduce using rule 54 (while_statement)


State 138

   34 args: args _COMMA num_exp .
   68 num_exp: num_exp . _ADD_SUB_OP num_exp
   69        | num_exp . _MUL_DIV_OP num_exp
   70        | num_exp . _LOP num_exp
   71        | num_exp . _RELOP num_exp

    _ADD_SUB_OP  shift, and go to state 70
    _MUL_DIV_OP  shift, and go to state 71
    _LOP         shift, and go to state 72
    _RELOP       shift, and go to state 73

    $default  reduce using rule 34 (args)


State 139

   53 elif_part: elif_part _ELIF num_exp _COLON new_line . body
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 98

    body  go to state 150


State 140

   64 else_part: _ELSE _COLON new_line body .

    $default  reduce using rule 64 (else_part)


State 141

   46 singular_method: _DEF _INIT . _LPAREN _ID init_method_params _RPAREN _COLON new_line body

    _LPAREN  shift, and go to state 151


State 142

   43 class_body: _INDENT class_methods _DEDENT .

    $default  reduce using rule 43 (class_body)


State 143

   45 class_methods: class_methods singular_method .

    $default  reduce using rule 45 (class_methods)


State 144

   35 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON new_line . body
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 98

    body  go to state 152


State 145

   55 for_statement: _FOR _ID _IN num_exp _COLON new_line body . else_part

    _ELSE  shift, and go to state 83

    $default  reduce using rule 63 (else_part)

    else_part  go to state 153


State 146

   62 finally_or_else_part: _ELSE _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 154


State 147

   59 except_part: except_part _EXCEPT _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 155


State 148

   58 except_part: except_part _EXCEPT _ID . _COLON new_line body

    _COLON  shift, and go to state 156


State 149

   61 finally_or_else_part: _FINALLY _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 157


State 150

   53 elif_part: elif_part _ELIF num_exp _COLON new_line body .

    $default  reduce using rule 53 (elif_part)


State 151

   46 singular_method: _DEF _INIT _LPAREN . _ID init_method_params _RPAREN _COLON new_line body

    _ID  shift, and go to state 158


State 152

   35 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON new_line body .

    $default  reduce using rule 35 (function_def)


State 153

   55 for_statement: _FOR _ID _IN num_exp _COLON new_line body else_part .

    $default  reduce using rule 55 (for_statement)


State 154

   62 finally_or_else_part: _ELSE _COLON new_line . body
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 98

    body  go to state 159


State 155

   59 except_part: except_part _EXCEPT _COLON new_line . body
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 98

    body  go to state 160


State 156

   58 except_part: except_part _EXCEPT _ID _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 161


State 157

   61 finally_or_else_part: _FINALLY _COLON new_line . body
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 98

    body  go to state 162


State 158

   46 singular_method: _DEF _INIT _LPAREN _ID . init_method_params _RPAREN _COLON new_line body

    _COMMA  shift, and go to state 163

    $default  reduce using rule 48 (init_method_params)

    init_method_params  go to state 164


State 159

   62 finally_or_else_part: _ELSE _COLON new_line body .

    $default  reduce using rule 62 (finally_or_else_part)


State 160

   59 except_part: except_part _EXCEPT _COLON new_line body .

    $default  reduce using rule 59 (except_part)


State 161

   58 except_part: except_part _EXCEPT _ID _COLON new_line . body
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 98

    body  go to state 165


State 162

   61 finally_or_else_part: _FINALLY _COLON new_line body .

    $default  reduce using rule 61 (finally_or_else_part)


State 163

   49 init_method_params: _COMMA . parameters

    _ID  shift, and go to state 86

    $default  reduce using rule 36 (parameters)

    parameters              go to state 166
    param_with_default_val  go to state 88


State 164

   46 singular_method: _DEF _INIT _LPAREN _ID init_method_params . _RPAREN _COLON new_line body

    _RPAREN  shift, and go to state 167


State 165

   58 except_part: except_part _EXCEPT _ID _COLON new_line body .

    $default  reduce using rule 58 (except_part)


State 166

   39 parameters: parameters . _COMMA _ID
   40           | parameters . _COMMA param_with_default_val
   49 init_method_params: _COMMA parameters .

    _COMMA  shift, and go to state 111

    $default  reduce using rule 49 (init_method_params)


State 167

   46 singular_method: _DEF _INIT _LPAREN _ID init_method_params _RPAREN . _COLON new_line body

    _COLON  shift, and go to state 168


State 168

   46 singular_method: _DEF _INIT _LPAREN _ID init_method_params _RPAREN _COLON . new_line body

    _NEW_LINE  shift, and go to state 1

    new_line  go to state 169


State 169

   46 singular_method: _DEF _INIT _LPAREN _ID init_method_params _RPAREN _COLON new_line . body
   85 new_line: new_line . _NEW_LINE

    _NEW_LINE  shift, and go to state 60
    _INDENT    shift, and go to state 98

    body  go to state 170


State 170

   46 singular_method: _DEF _INIT _LPAREN _ID init_method_params _RPAREN _COLON new_line body .

    $default  reduce using rule 46 (singular_method)
